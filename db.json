{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"themes/keep/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/keep/source/css/font-awesome.min.css","path":"css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/keep/source/js/back2top.js","path":"js/back2top.js","modified":1,"renderable":1},{"_id":"themes/keep/source/js/code-copy.js","path":"js/code-copy.js","modified":1,"renderable":1},{"_id":"themes/keep/source/js/dark-light-toggle.js","path":"js/dark-light-toggle.js","modified":1,"renderable":1},{"_id":"themes/keep/source/js/header-shrink.js","path":"js/header-shrink.js","modified":1,"renderable":1},{"_id":"themes/keep/source/js/lazyload.js","path":"js/lazyload.js","modified":1,"renderable":1},{"_id":"themes/keep/source/js/left-side-toggle.js","path":"js/left-side-toggle.js","modified":1,"renderable":1},{"_id":"themes/keep/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/keep/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/keep/source/js/toc.js","path":"js/toc.js","modified":1,"renderable":1},{"_id":"themes/keep/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/keep/source/images/65472.jpg","path":"images/65472.jpg","modified":1,"renderable":1},{"_id":"themes/keep/source/images/avatar.svg","path":"images/avatar.svg","modified":1,"renderable":1},{"_id":"themes/keep/source/images/bg.svg","path":"images/bg.svg","modified":1,"renderable":1},{"_id":"themes/keep/source/images/logo.png","path":"images/logo.png","modified":1,"renderable":1},{"_id":"themes/keep/source/images/loading.svg","path":"images/loading.svg","modified":1,"renderable":1},{"_id":"themes/keep/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/keep/source/images/myavatar.jpg","path":"images/myavatar.jpg","modified":1,"renderable":1},{"_id":"themes/keep/source/images/upyun.png","path":"images/upyun.png","modified":1,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.eot","path":"webfonts/fa-brands-400.eot","modified":1,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.svg","path":"webfonts/fa-brands-400.svg","modified":1,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.ttf","path":"webfonts/fa-brands-400.ttf","modified":1,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff","path":"webfonts/fa-brands-400.woff","modified":1,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff2","path":"webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.eot","path":"webfonts/fa-regular-400.eot","modified":1,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.ttf","path":"webfonts/fa-regular-400.ttf","modified":1,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.svg","path":"webfonts/fa-regular-400.svg","modified":1,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff","path":"webfonts/fa-regular-400.woff","modified":1,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff2","path":"webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.eot","path":"webfonts/fa-solid-900.eot","modified":1,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.ttf","path":"webfonts/fa-solid-900.ttf","modified":1,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.svg","path":"webfonts/fa-solid-900.svg","modified":1,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff","path":"webfonts/fa-solid-900.woff","modified":1,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff2","path":"webfonts/fa-solid-900.woff2","modified":1,"renderable":1},{"_id":"themes/keep/source/css/common/animated.styl","path":"css/common/animated.styl","modified":1,"renderable":1},{"_id":"themes/keep/source/css/common/basic.styl","path":"css/common/basic.styl","modified":1,"renderable":1},{"_id":"themes/keep/source/css/common/markdown.styl","path":"css/common/markdown.styl","modified":1,"renderable":1},{"_id":"themes/keep/source/css/common/keep-theme.styl","path":"css/common/keep-theme.styl","modified":1,"renderable":1},{"_id":"themes/keep/source/css/common/variables.styl","path":"css/common/variables.styl","modified":1,"renderable":1},{"_id":"themes/keep/source/css/layout/archive-content.styl","path":"css/layout/archive-content.styl","modified":1,"renderable":1},{"_id":"themes/keep/source/css/layout/article-content.styl","path":"css/layout/article-content.styl","modified":1,"renderable":1},{"_id":"themes/keep/source/css/layout/category-list.styl","path":"css/layout/category-list.styl","modified":1,"renderable":1},{"_id":"themes/keep/source/css/layout/category-content.styl","path":"css/layout/category-content.styl","modified":1,"renderable":1},{"_id":"themes/keep/source/css/layout/home-content.styl","path":"css/layout/home-content.styl","modified":1,"renderable":1},{"_id":"themes/keep/source/css/layout/page.styl","path":"css/layout/page.styl","modified":1,"renderable":1},{"_id":"themes/keep/source/css/layout/tag-content.styl","path":"css/layout/tag-content.styl","modified":1,"renderable":1},{"_id":"themes/keep/source/js/libs/anime.min.js","path":"js/libs/anime.min.js","modified":1,"renderable":1},{"_id":"themes/keep/source/js/libs/pjax.min.js","path":"js/libs/pjax.min.js","modified":1,"renderable":1},{"_id":"themes/keep/source/css/common/codeblock/code-theme.styl","path":"css/common/codeblock/code-theme.styl","modified":1,"renderable":1},{"_id":"themes/keep/source/css/common/codeblock/copy-code.styl","path":"css/common/codeblock/copy-code.styl","modified":1,"renderable":1},{"_id":"themes/keep/source/css/common/codeblock/highlight.styl","path":"css/common/codeblock/highlight.styl","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/markdown语法.md","hash":"f7e3a9d22b35f8ea5de73411c3271759ed8b040a","modified":1651054825670},{"_id":"source/_posts/【观影记录】三傻大闹宝莱坞.md","hash":"ae4916a7d3ef712be4dc18b74841db4bf79783c7","modified":1651137641173},{"_id":"source/_posts/【观影记录】岁月神偷.md","hash":"f80bd51d5301161ebffd840969b8c5a7bf11149f","modified":1651137602124},{"_id":"source/_posts/【观影记录】少年派的奇幻漂流.md","hash":"7d127b032453c5b834fd26030dbb628157f3a42c","modified":1651137629822},{"_id":"source/_posts/【观影记录】肖申克的救赎.md","hash":"a7e13d7a3f54b55482121b283bfadd153a85c884","modified":1651137584672},{"_id":"source/_posts/【观影记录】阿甘正传.md","hash":"5578a652f5ac6ef33512cdc987c48ea3f55303bb","modified":1651137665481},{"_id":"source/_posts/我的第一篇博客.md","hash":"7b3e013f960ea49c914cfde339bead453c136f65","modified":1651136484789},{"_id":"source/_posts/【观影记录】霸王别姬.md","hash":"6af9259f6c3e22f29eb247a94cb5d4c027c56a23","modified":1651137652065},{"_id":"source/_posts/有趣的图片.md","hash":"91ec73d02331fcdd54da6e39e0e0f18a4bfd3b81","modified":1651078367936},{"_id":"source/_posts/腾讯pcg客户端面经.md","hash":"8475ba20037a6aad44861245dcdb67dc39082b60","modified":1651074771658},{"_id":"source/categories/index.md","hash":"9e7c787b0cf4e89c002e7dc15d566821e693eeed","modified":1651058834504},{"_id":"source/tags/index.md","hash":"763b3c213003a38ed0ec7f34f49b69ef5a559d97","modified":1651075199603},{"_id":"themes/keep/README_zh-CN.md","hash":"d3bfa4f8720b73455d9e77f3e918de60daca01d7","modified":1651052058964},{"_id":"themes/keep/README.md","hash":"06ef53a5daecd42cfe7d653f9331e5ea66f1f590","modified":1651052058964},{"_id":"themes/keep/LICENSE","hash":"1eba7caf09a39110ad2f542e3ed8700d1a69c6d3","modified":1651052058488},{"_id":"themes/keep/.editorconfig","hash":"26a27140a04ad1873639b19f8240fb2bae367878","modified":1651052058482},{"_id":"themes/keep/_config.yml","hash":"8d38182081f1a493f4d3d3486034bd00031041b9","modified":1651076287334},{"_id":"themes/keep/package.json","hash":"a3be00d629d52f6cadde16fea48a0f68c288da07","modified":1651052058964},{"_id":"themes/keep/README_zh-TW.md","hash":"9913cf385c568a516055b27a9c944cc95263b3bc","modified":1651052058964},{"_id":"themes/keep/layout/archive-content.ejs","hash":"89e256133a128858702f3bd0a6cf8330f5a8f2f7","modified":1651052058498},{"_id":"themes/keep/layout/category-content.ejs","hash":"9293aba389c0664335b3308cbb343e603ff1f24f","modified":1651052058503},{"_id":"themes/keep/layout/archive.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1651052058500},{"_id":"themes/keep/layout/article-content.ejs","hash":"9597d26784b62b0060950e8af2f71322013d3828","modified":1651052058501},{"_id":"themes/keep/layout/category.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1651052058504},{"_id":"themes/keep/layout/category-list.ejs","hash":"17ea257cb28fb63c1e1650c157541d90a4f7fba5","modified":1651052058504},{"_id":"themes/keep/layout/index.ejs","hash":"d04b5608fc801f00e247e7355c89a8643dc76914","modified":1651052058516},{"_id":"themes/keep/layout/home-content.ejs","hash":"c6897b9a1f88f157bf9cb935fba43a13911871eb","modified":1651052058513},{"_id":"themes/keep/layout/page.ejs","hash":"ad0d0452ee61277805ac30c8d97b9bdd3d09cf89","modified":1651052058521},{"_id":"themes/keep/layout/tag-content.ejs","hash":"379fad48764e11d7962f7cec730b0a6e932ef4a3","modified":1651052058526},{"_id":"themes/keep/layout/layout.ejs","hash":"a2d3f1ee6a79810de41d80b80c087f675f86ef84","modified":1651052058517},{"_id":"themes/keep/layout/tag.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1651052058527},{"_id":"themes/keep/languages/en.yml","hash":"11902f5813fc994a0620580d3caecad0bd4f4bec","modified":1651052059976},{"_id":"themes/keep/layout/tags.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1651052058528},{"_id":"themes/keep/languages/zh-TW.yml","hash":"428b304a3ad542072bb578ed312bb06794a654e1","modified":1651052059979},{"_id":"themes/keep/languages/zh-CN.yml","hash":"f8b9da63093739b5b7a555e8d1aa0f30d38171dc","modified":1651052059976},{"_id":"themes/keep/scripts/use-source-data.js","hash":"0dcab564f400e1775af8e839d9f1a219d0c003bb","modified":1651052058964},{"_id":"themes/keep/layout/_partial/archive-list.ejs","hash":"c51a44fd234c7bc5e265f6c0afe3b4c9ca665b0c","modified":1651052058499},{"_id":"themes/keep/layout/_partial/first-screen.ejs","hash":"e28d781dd6868b08e9007393495fae75c6e502aa","modified":1651052058507},{"_id":"themes/keep/layout/_partial/article-copyright-info.ejs","hash":"2fec371f5b6f97cc6fc242aced9baacce93a6f86","modified":1651052058502},{"_id":"themes/keep/layout/_partial/footer.ejs","hash":"7ef185f52364e891791472e365d2e4441f738aa3","modified":1651052058508},{"_id":"themes/keep/layout/_partial/article-meta-info.ejs","hash":"fb04ac78cfee23b5f73b8721925e9c7fc168e2aa","modified":1651052058502},{"_id":"themes/keep/layout/_partial/friends-link.ejs","hash":"e659c6a12c80ebf0cbe9f38a58425248702f8d2f","modified":1651052058509},{"_id":"themes/keep/layout/_partial/head.ejs","hash":"697eb90b6448d1dcecc0fc19f1033086697bb2f8","modified":1651052058511},{"_id":"themes/keep/layout/_partial/header.ejs","hash":"bb57e24ef7005175824f19ff4cb8537ce4771590","modified":1651052058511},{"_id":"themes/keep/layout/_partial/image-viewer.ejs","hash":"c30d3f046035b6c63ee90fc961f67cbc2d6073af","modified":1651052058514},{"_id":"themes/keep/layout/_partial/home-article-meta-info.ejs","hash":"f26d28c92ca79287d45cf20da6fdb0f68815c655","modified":1651052058512},{"_id":"themes/keep/layout/_partial/local-search.ejs","hash":"747cd0ac75f31c9837abcbf5e06eac5501089d96","modified":1651052058518},{"_id":"themes/keep/layout/_partial/page-template.ejs","hash":"adec4312027a76b5969e78a2dd245563e4e6333f","modified":1651052058519},{"_id":"themes/keep/layout/_partial/paginator.ejs","hash":"4183e4991a30132010d6428c9b2c51d198d268d8","modified":1651052058521},{"_id":"themes/keep/layout/_partial/post-tools.ejs","hash":"44a271ffbfb3af5c715ab25777cc58ddf9f62f82","modified":1651052058524},{"_id":"themes/keep/layout/_partial/progress-bar.ejs","hash":"791c78e36e4191f5a738964d4fba545be2649cea","modified":1651052058524},{"_id":"themes/keep/layout/_partial/side-tools.ejs","hash":"3439e47a03651a3540541ba85d9ab0c9b456fc04","modified":1651052058526},{"_id":"themes/keep/layout/_partial/scripts.ejs","hash":"ea08752ab79d3c61e31fae9dd49afc0feff6f36a","modified":1651052058525},{"_id":"themes/keep/scripts/filters/link-handle.js","hash":"4c8fd067eaf4cce4776413abe90a9ea3f1f04bc7","modified":1651052058964},{"_id":"themes/keep/scripts/filters/lazyload-handle.js","hash":"c62dc757815b23c04bfd9112136d39a7deb5709a","modified":1651052058948},{"_id":"themes/keep/layout/_partial/toc.ejs","hash":"27844ed7c138d907c25d0e198f5425fe0c0299b2","modified":1651052058529},{"_id":"themes/keep/layout/_partial/tagcloud.ejs","hash":"3c1f80ec34a4db4d242b8b1c024ffa8de0ddac78","modified":1651052058528},{"_id":"themes/keep/scripts/helpers/export-config.js","hash":"9099191029226a04aa7e633920dc3458fef940e7","modified":1651052058948},{"_id":"themes/keep/source/css/style.styl","hash":"e193b9f313c20f91504e4115a07e94e93ac383f8","modified":1651052058995},{"_id":"themes/keep/scripts/helpers/helper.js","hash":"9b149793aac46a1d7550ca2db49e215feffe1178","modified":1651052058948},{"_id":"themes/keep/source/css/font-awesome.min.css","hash":"2c2236d61417d354b5cbbc907dfc9c0eb1325a7f","modified":1651052058496},{"_id":"themes/keep/source/js/dark-light-toggle.js","hash":"3941485684abdc9170f68b536c7cab57f03d68db","modified":1651052058948},{"_id":"themes/keep/source/js/back2top.js","hash":"4be3dfc5ea5d134de22dddce950204c3fc05a659","modified":1651052058948},{"_id":"themes/keep/source/js/code-copy.js","hash":"0fa4f5c6b1b4fa2dd059a3fabd975cb5236aa68e","modified":1651052058948},{"_id":"themes/keep/source/js/header-shrink.js","hash":"5a95ba1079638342689aa31ae331b0ad29423cfb","modified":1651052058948},{"_id":"themes/keep/source/js/left-side-toggle.js","hash":"2396af1662b0cc8bf525c7cfed2f212a752a3b20","modified":1651052058964},{"_id":"themes/keep/source/js/local-search.js","hash":"a76838dbc9b3dc683b7653d0e60c2a824316d598","modified":1651052058964},{"_id":"themes/keep/source/js/lazyload.js","hash":"9b1d7be063feff3a4268190575959a81604cef95","modified":1651052058948},{"_id":"themes/keep/source/js/toc.js","hash":"089573f669c7eaae7b3b88a1f4b94c630983f520","modified":1651052058964},{"_id":"themes/keep/source/js/main.js","hash":"52f9e2ccb2b93399bf2480aac989c702484b8aec","modified":1651052058964},{"_id":"themes/keep/source/js/utils.js","hash":"356c23107a336b682a7101dfc856fa6e0e6cdb76","modified":1651052058964},{"_id":"themes/keep/source/images/avatar.svg","hash":"ff6709064f40ce3d683eb2673cc918009fb5684c","modified":1651052058995},{"_id":"themes/keep/source/images/bg.svg","hash":"fe49c289a1110973a1c089fe4a9565eb06ecc036","modified":1651052058995},{"_id":"themes/keep/source/images/logo.svg","hash":"509c25b6e51d435b3acd6b0a85b823daf9a48363","modified":1651052059342},{"_id":"themes/keep/source/images/loading.svg","hash":"7689011e66c78998d91784ae5abe680f76772589","modified":1651052059342},{"_id":"themes/keep/source/images/myavatar.jpg","hash":"c7099ba30d22285bcc22da002935b3b2b6e577ac","modified":1651054423999},{"_id":"themes/keep/source/images/upyun.png","hash":"f014175dd78c3ed5249e69c91603e20a3efcd330","modified":1651052058964},{"_id":"themes/keep/source/webfonts/fa-regular-400.ttf","hash":"d64e58981a419de52bac110c979887d34e366135","modified":1651052059938},{"_id":"themes/keep/source/webfonts/fa-regular-400.eot","hash":"2baa9a8aa68f1d2d4712b3c7205f9105aaf21879","modified":1651052058728},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff","hash":"26afc29d39ab9fac6d0b607be7e76db093ff7c3a","modified":1651052059953},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff2","hash":"fb9648469530a05fa9aac80e47d4d6960472a242","modified":1651052059953},{"_id":"themes/keep/layout/_partial/comment/gitalk.ejs","hash":"cff08caa0a70bf276500ccdbf2965865399d985b","modified":1651052058510},{"_id":"themes/keep/layout/_partial/comment/comment.ejs","hash":"3567cb1acb984e13cf7b6ac047467298cd6e98e3","modified":1651052058505},{"_id":"themes/keep/layout/_partial/comment/twikoo.ejs","hash":"5d75b54edfcfb6112ac2c50fa7f4040e3716261d","modified":1651052058530},{"_id":"themes/keep/layout/_partial/pjax/pjax.ejs","hash":"db76ce10f71e0aed717c4734ef2efbdc4b860c16","modified":1651052058523},{"_id":"themes/keep/source/css/common/animated.styl","hash":"064493c99c4d1d19803fc544251f4fbc491e7a1d","modified":1651052058975},{"_id":"themes/keep/layout/_partial/comment/valine.ejs","hash":"1c58eb3e1f0bf06758787ff91c56924210de6665","modified":1651052058530},{"_id":"themes/keep/source/css/common/basic.styl","hash":"2ecd4b0d469038a0753ad2de3eb2ba8c20f809db","modified":1651052058979},{"_id":"themes/keep/source/css/common/keep-theme.styl","hash":"48acc1b0b18b5c34d758118bad135b7cea18b5a1","modified":1651052058980},{"_id":"themes/keep/source/css/common/markdown.styl","hash":"73a96b2e7bdbaa1e98fd2a9928a05c56763d9064","modified":1651052058980},{"_id":"themes/keep/source/css/layout/archive-content.styl","hash":"254ca2715de67d5783adfae40723a7917b6d9f8a","modified":1651052058976},{"_id":"themes/keep/source/css/common/variables.styl","hash":"db80d2ad6d99267bbc13abe7b11660cae04cc023","modified":1651052058995},{"_id":"themes/keep/source/css/layout/category-list.styl","hash":"28ea212b14e664d08de4ce93db1e0153e48a11ed","modified":1651052058980},{"_id":"themes/keep/source/css/layout/article-content.styl","hash":"8f62a171debaa09d653328d0c76e170f82351a40","modified":1651052058977},{"_id":"themes/keep/source/css/layout/category-content.styl","hash":"9af1e7fbc52aad0b4a47593813961a32a1d2b5c5","modified":1651052058980},{"_id":"themes/keep/source/css/layout/page.styl","hash":"c189508f4c6d807ef822af7bb9177f12e7532b94","modified":1651052058980},{"_id":"themes/keep/source/css/layout/home-content.styl","hash":"029336439c79ece32d25f8fee9dc018206fbcd1b","modified":1651052058980},{"_id":"themes/keep/source/css/layout/tag-content.styl","hash":"73af0b51aee119b2135dc8cd53cd3a3ad215fff6","modified":1651052058995},{"_id":"themes/keep/source/js/libs/anime.min.js","hash":"960be51132134acd65c2017cc8a5d69cb419a0cd","modified":1651052058948},{"_id":"themes/keep/source/js/libs/pjax.min.js","hash":"57ec40cb4898d7ba74a03603d608af378e5431f8","modified":1651052058964},{"_id":"themes/keep/source/css/common/codeblock/copy-code.styl","hash":"eac367ec543527a7533490fa19b451a452684614","modified":1651052058980},{"_id":"themes/keep/source/css/common/codeblock/code-theme.styl","hash":"8b6131af54382b7959c255d58c52474564c91bf8","modified":1651052058980},{"_id":"themes/keep/source/css/common/codeblock/highlight.styl","hash":"081f08ed399c4fc6227ab15109595a211693462b","modified":1651052058980},{"_id":"themes/keep/source/css/layout/_partial/archive-list.styl","hash":"e85adfdd6fd83d2529988da644df51ddffbc87f5","modified":1651052058977},{"_id":"themes/keep/source/css/layout/_partial/article-copyright-info.styl","hash":"ae286cb8c7e788a7d393774c9e9c394352e48e72","modified":1651052058978},{"_id":"themes/keep/source/css/layout/_partial/footer.styl","hash":"0610a37f2eba1b6ee2ed138e3367d80be55c9d7d","modified":1651052058980},{"_id":"themes/keep/source/css/layout/_partial/first-screen.styl","hash":"9422e7d052f9e8a81d5a9acf12af9670fe2c41bb","modified":1651052058980},{"_id":"themes/keep/source/css/layout/_partial/article-meta-info.styl","hash":"8ca83a4fe1afbb15669becebcde3ed0e12ac07bb","modified":1651052058979},{"_id":"themes/keep/source/css/layout/_partial/image-viewer.styl","hash":"fb82ac6589304cf1e3ed7ff2904108641882ddbc","modified":1651052058980},{"_id":"themes/keep/source/css/layout/_partial/header.styl","hash":"2bfe1bddb6224958f29e77bcb730cb7af547a5ae","modified":1651052058980},{"_id":"themes/keep/source/css/layout/_partial/local-search.styl","hash":"a381afa2de855d968810c4f6680436fd31c63d55","modified":1651052058980},{"_id":"themes/keep/source/css/layout/_partial/page-template.styl","hash":"97768d3f95e8cf36fd3f783a5deb7e8fcaa5c67d","modified":1651052058980},{"_id":"themes/keep/source/css/layout/_partial/paginator.styl","hash":"2fbe611351cdeee678626c22aa268132693936b2","modified":1651052058980},{"_id":"themes/keep/source/css/layout/_partial/progress-bar.styl","hash":"c2b9474d130df3605578b77d76c604234a2b0f6f","modified":1651052058980},{"_id":"themes/keep/source/css/layout/_partial/post-tools.styl","hash":"7c642dfdd54ed60aadb2f162e25c4fc5720716b7","modified":1651052058980},{"_id":"themes/keep/source/css/layout/_partial/toc.styl","hash":"c19d5833234c510ac1b8358cfcb7e33af29c3f6d","modified":1651052058995},{"_id":"themes/keep/source/css/layout/_partial/tagcloud.styl","hash":"39d03031033aa3bb9d3a76fdb5056966334e9221","modified":1651052058995},{"_id":"themes/keep/source/css/layout/_partial/side-tools.styl","hash":"f1cec5eb066c13f17d0acc997790404d059fbd3f","modified":1651052058995},{"_id":"themes/keep/source/css/layout/_partial/comment/comment.styl","hash":"9874482d9a8bf623abc28f8fa9c2bbfeb55067a6","modified":1651052058980},{"_id":"themes/keep/source/css/layout/_partial/comment/gitalk.styl","hash":"09d223d23c8f032da4f156efebab46102b15942d","modified":1651052058980},{"_id":"themes/keep/source/css/layout/_partial/comment/twikoo.styl","hash":"8225224a5c6d688e4ecd2e5557e8b2c5c43e2cf4","modified":1651052058995},{"_id":"themes/keep/source/css/layout/_partial/comment/valine.styl","hash":"dbff6bc6ecb6a20068047e6f7532e1d2df627929","modified":1651052058995},{"_id":"themes/keep/source/images/65472.jpg","hash":"ac82ac32300ed4cd8c03df38da001694ddb77b6e","modified":1651074387558},{"_id":"themes/keep/source/images/logo.png","hash":"976b406e8f802a16a2bd88e283d5ff9d0526bdaa","modified":1651057847928},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff","hash":"a42ac4a94f4e0e9333cdb1b2fb6c13c0ae690ff2","modified":1651052059953},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff2","hash":"f726c4275bb494a045fde059175f072de06c01df","modified":1651052059953},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff","hash":"3b86a0ce15d8d534b65e98560e321a933d310688","modified":1651052059953},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff2","hash":"9b592048b9062b00f0b2dd782d70a95b7dc69b83","modified":1651052059969},{"_id":"themes/keep/source/webfonts/fa-brands-400.eot","hash":"c719f4375679ee58e156434f9ba9727be669cf07","modified":1651052058542},{"_id":"themes/keep/source/webfonts/fa-brands-400.ttf","hash":"9b49c6c5b0cbdef158ae31b2a4e4814555408389","modified":1651052059938},{"_id":"themes/keep/source/webfonts/fa-regular-400.svg","hash":"6ad2be875a79cb6efb8d7ecf6e632784906656a7","modified":1651052059326},{"_id":"themes/keep/source/webfonts/fa-solid-900.eot","hash":"c39b89f7fa7b66931ab02a54002db5ffcbff206c","modified":1651052058744},{"_id":"themes/keep/source/webfonts/fa-solid-900.ttf","hash":"d537bf4cc7273ddb3fd754d53f2b241aeafaefe7","modified":1651052059953},{"_id":"themes/keep/source/webfonts/fa-brands-400.svg","hash":"deddeac293c90f492dc8546a468871a07b83e6b3","modified":1651052059326},{"_id":"themes/keep/source/webfonts/fa-solid-900.svg","hash":"b635afc5e400633904e0a7cde3ec75cd57e403cf","modified":1651052059342},{"_id":"public/search.json","hash":"af33c6dcc27f37665db455ab4c49ebe91426ee0e","modified":1651137735628},{"_id":"public/categories/index.html","hash":"002655281a9d9987e1783762bddbed24f4704ac7","modified":1651137735628},{"_id":"public/tags/index.html","hash":"296eb53367212d6cecce0de1752bbf655e9cfd29","modified":1651137735628},{"_id":"public/2022/04/28/有趣的图片/index.html","hash":"475ccb5a56a983052edcbdbdcda5197e3e884a81","modified":1651137735628},{"_id":"public/2022/04/18/【观影记录】肖申克的救赎/index.html","hash":"d43c0f493893edba6405854808a537644eb2d662","modified":1651137735628},{"_id":"public/archives/index.html","hash":"ab3333e1d3769a5b4ba9019d35e4d02f050ac859","modified":1651137735628},{"_id":"public/archives/2022/index.html","hash":"6762210c26f683462eaeb2809cef4be98b2619dc","modified":1651137735628},{"_id":"public/archives/2022/04/index.html","hash":"052d446fd8b62c83ed994a8b1ca24d643131e4b8","modified":1651137735628},{"_id":"public/categories/编程教程/index.html","hash":"164e5652f3b2335ade014f4eac63edf9fb0371ce","modified":1651137735628},{"_id":"public/categories/观影记录/index.html","hash":"ac61f30c336ad3ef8e6373cbb1655bd559d7421f","modified":1651137735628},{"_id":"public/categories/日常分享/index.html","hash":"4a22f95908c3b4f32779d2b0c9f7e42557779f68","modified":1651137735628},{"_id":"public/categories/面试经验/index.html","hash":"5e9c573d3129850edd9e39e4af64fee4d8f0eadb","modified":1651137735628},{"_id":"public/tags/markdown/index.html","hash":"f53b1565836b5f365ccb18716775db01f55d1801","modified":1651137735628},{"_id":"public/tags/电影/index.html","hash":"9edaea5246c4d59943ec84120f80a600d53f1f3d","modified":1651137735628},{"_id":"public/tags/施工中/index.html","hash":"8b7f39367cc7ed182806f26d48cb3cb95d0ce35e","modified":1651137735628},{"_id":"public/tags/hexo/index.html","hash":"404dfc561384c5e898418ad9f7a32ed9d5383bb7","modified":1651137735628},{"_id":"public/tags/博客/index.html","hash":"abf88037fcc363efa87702f828aa2b3a67c31683","modified":1651137735628},{"_id":"public/tags/疫情中的2022/index.html","hash":"e6894c36ece73fa96c22498557c093e80dff1ccd","modified":1651137735628},{"_id":"public/tags/面试/index.html","hash":"b4aa6727430d03c61546fa2cd49f136e307c1c6d","modified":1651137735628},{"_id":"public/tags/客户端/index.html","hash":"cd276f00112757da0a68fd26fe5819633e7b647f","modified":1651137735628},{"_id":"public/2022/04/28/【观影记录】岁月神偷/index.html","hash":"c32b5ec5d2e4378a99fefbc26283234ce8788608","modified":1651137735628},{"_id":"public/2022/04/27/腾讯pcg客户端面经/index.html","hash":"b1c5a89203ceb5c47c8122c70c47e1418399b94a","modified":1651137735628},{"_id":"public/2022/04/27/markdown语法/index.html","hash":"a21fc338856a457ea501d51652198403dc1d734f","modified":1651137735628},{"_id":"public/2022/04/27/我的第一篇博客/index.html","hash":"32d719447410593b63ec8fd81f54b2a49d05068f","modified":1651137735628},{"_id":"public/2022/04/23/【观影记录】少年派的奇幻漂流/index.html","hash":"0d81059e5eacbec9b31e8a6b2d86b4667a2ce809","modified":1651137735628},{"_id":"public/2022/04/22/【观影记录】三傻大闹宝莱坞/index.html","hash":"813c66fa4b95af88efc87f1c71f375f899204b8b","modified":1651137735628},{"_id":"public/2022/04/21/【观影记录】阿甘正传/index.html","hash":"6098fe7badef58eb6bfc66f3754ef55978b598d8","modified":1651137735628},{"_id":"public/2022/04/19/【观影记录】霸王别姬/index.html","hash":"3538e7a720dcca4b2f07fe54e74b751b322b41e5","modified":1651137735628},{"_id":"public/index.html","hash":"94a891448333e54d6f76e3492f2334c2fa59175d","modified":1651137735628},{"_id":"public/tags/开发/index.html","hash":"cbdee829e5955fff9b9b86afec0af40a74bcfc72","modified":1651137735628},{"_id":"public/images/avatar.svg","hash":"ff6709064f40ce3d683eb2673cc918009fb5684c","modified":1651137735628},{"_id":"public/images/bg.svg","hash":"fe49c289a1110973a1c089fe4a9565eb06ecc036","modified":1651137735628},{"_id":"public/images/loading.svg","hash":"7689011e66c78998d91784ae5abe680f76772589","modified":1651137735628},{"_id":"public/images/logo.svg","hash":"509c25b6e51d435b3acd6b0a85b823daf9a48363","modified":1651137735628},{"_id":"public/images/myavatar.jpg","hash":"c7099ba30d22285bcc22da002935b3b2b6e577ac","modified":1651137735628},{"_id":"public/images/upyun.png","hash":"f014175dd78c3ed5249e69c91603e20a3efcd330","modified":1651137735628},{"_id":"public/webfonts/fa-regular-400.ttf","hash":"d64e58981a419de52bac110c979887d34e366135","modified":1651137735628},{"_id":"public/webfonts/fa-regular-400.eot","hash":"2baa9a8aa68f1d2d4712b3c7205f9105aaf21879","modified":1651137735628},{"_id":"public/webfonts/fa-regular-400.woff","hash":"26afc29d39ab9fac6d0b607be7e76db093ff7c3a","modified":1651137735628},{"_id":"public/webfonts/fa-regular-400.woff2","hash":"fb9648469530a05fa9aac80e47d4d6960472a242","modified":1651137735628},{"_id":"public/css/hbe.style.css","hash":"b0a0077cb588c0941823905fcc383aa7509ade73","modified":1651137735628},{"_id":"public/lib/hbe.js","hash":"136dba00826bdd086153bf0acb5473aea7183ad1","modified":1651137735628},{"_id":"public/images/logo.png","hash":"976b406e8f802a16a2bd88e283d5ff9d0526bdaa","modified":1651137735628},{"_id":"public/images/65472.jpg","hash":"ac82ac32300ed4cd8c03df38da001694ddb77b6e","modified":1651137735628},{"_id":"public/webfonts/fa-brands-400.woff","hash":"a42ac4a94f4e0e9333cdb1b2fb6c13c0ae690ff2","modified":1651137735628},{"_id":"public/webfonts/fa-brands-400.woff2","hash":"f726c4275bb494a045fde059175f072de06c01df","modified":1651137735628},{"_id":"public/webfonts/fa-solid-900.woff","hash":"3b86a0ce15d8d534b65e98560e321a933d310688","modified":1651137735628},{"_id":"public/webfonts/fa-solid-900.woff2","hash":"9b592048b9062b00f0b2dd782d70a95b7dc69b83","modified":1651137735628},{"_id":"public/js/back2top.js","hash":"fc8e85f6704e39ae3a613bbec5dd51d449be8010","modified":1651137735628},{"_id":"public/js/dark-light-toggle.js","hash":"223e6f1d4e6e70956e4661b58c430e1c68def125","modified":1651137735628},{"_id":"public/js/header-shrink.js","hash":"167b9b6a9ed63c6cf4081cb3c201dd16bbbfb9ad","modified":1651137735628},{"_id":"public/js/code-copy.js","hash":"3fdabac26f6406a4592336f1f444ec966201b5d9","modified":1651137735628},{"_id":"public/js/lazyload.js","hash":"95aad532f17d7a8119979fc61ade9e626308a2af","modified":1651137735628},{"_id":"public/js/left-side-toggle.js","hash":"618f7cfc45db4d82b2f1d00d8e9ee936bcf9043b","modified":1651137735628},{"_id":"public/js/main.js","hash":"ca8ed228cc0bc234be74428d029cfd047eec0ed6","modified":1651137735628},{"_id":"public/js/local-search.js","hash":"9509ec6d2d7d4466fe37ad624cf606f6639fb3fe","modified":1651137735628},{"_id":"public/js/toc.js","hash":"ae69bf65d2b30d299b6ca9e2361d3b6e0db3a077","modified":1651137735628},{"_id":"public/js/utils.js","hash":"a2413711ebf7ffc96eafec2ef45a5d243d3ccdb6","modified":1651137735628},{"_id":"public/css/common/markdown.css","hash":"8c9fb9f7fb403e76a4446a7e533ebe36dd702483","modified":1651137735628},{"_id":"public/css/common/animated.css","hash":"654c7588d80dc8b481a203e3071b3cedd41c7fde","modified":1651137735628},{"_id":"public/css/common/basic.css","hash":"55f95a3b9398ffbf11b8b39f264509e821df9e2e","modified":1651137735628},{"_id":"public/css/common/keep-theme.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1651137735628},{"_id":"public/css/common/variables.css","hash":"157311f7b38a76721f2b6a2a9bd5229fac60df41","modified":1651137735628},{"_id":"public/css/layout/archive-content.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1651137735628},{"_id":"public/css/layout/category-list.css","hash":"672859a61a4e93c0514772112fb557395306e940","modified":1651137735628},{"_id":"public/css/layout/article-content.css","hash":"032fd87dc40e0252a5ab59a12adc420371bd13bf","modified":1651137735628},{"_id":"public/css/layout/page.css","hash":"c9d5a1244b1a393ebf63412cf9ffef43ca48d64e","modified":1651137735628},{"_id":"public/css/layout/category-content.css","hash":"9687f9cbe029092b633fb804c28ecdcb54860511","modified":1651137735628},{"_id":"public/css/layout/home-content.css","hash":"be1438b849ebf82cea573986fbbd1deed5334a72","modified":1651137735628},{"_id":"public/css/layout/tag-content.css","hash":"90b0cff1ef0228035cdca9ade2adef71c6c8fb5e","modified":1651137735628},{"_id":"public/css/common/codeblock/code-theme.css","hash":"0edc6d498dc0abbaadb152b48e9e7bebb6fd15f4","modified":1651137735628},{"_id":"public/css/common/codeblock/highlight.css","hash":"a6584196f859d00cdd962f43c809e44ed89319e4","modified":1651137735628},{"_id":"public/css/common/codeblock/copy-code.css","hash":"fa5f022395fe92b6daea063418a32f8c19be6168","modified":1651137735628},{"_id":"public/css/style.css","hash":"ae843bd14a1f9e6ac6739942016d955d2834253f","modified":1651137735628},{"_id":"public/css/font-awesome.min.css","hash":"c508528feb9fd540454f838653cd4863b290df2e","modified":1651137735628},{"_id":"public/js/libs/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1651137735628},{"_id":"public/js/libs/pjax.min.js","hash":"57ec40cb4898d7ba74a03603d608af378e5431f8","modified":1651137735628},{"_id":"public/webfonts/fa-brands-400.ttf","hash":"9b49c6c5b0cbdef158ae31b2a4e4814555408389","modified":1651137735628},{"_id":"public/webfonts/fa-brands-400.eot","hash":"c719f4375679ee58e156434f9ba9727be669cf07","modified":1651137735628},{"_id":"public/webfonts/fa-regular-400.svg","hash":"6ad2be875a79cb6efb8d7ecf6e632784906656a7","modified":1651137735628},{"_id":"public/webfonts/fa-solid-900.eot","hash":"c39b89f7fa7b66931ab02a54002db5ffcbff206c","modified":1651137735628},{"_id":"public/webfonts/fa-solid-900.ttf","hash":"d537bf4cc7273ddb3fd754d53f2b241aeafaefe7","modified":1651137735628},{"_id":"public/webfonts/fa-brands-400.svg","hash":"deddeac293c90f492dc8546a468871a07b83e6b3","modified":1651137735628},{"_id":"public/webfonts/fa-solid-900.svg","hash":"b635afc5e400633904e0a7cde3ec75cd57e403cf","modified":1651137735628}],"Category":[{"name":"编程教程","_id":"cl2isrz0v00049gv8gihjfn4t"},{"name":"观影记录","_id":"cl2isrz1200099gv873be05b8"},{"name":"日常分享","_id":"cl2isrz1q001g9gv84w1kdgck"},{"name":"面试经验","_id":"cl2isrz1r001i9gv832oq6d6z"}],"Data":[],"Page":[{"title":"categories","date":"2022-04-27T11:26:27.000Z","type":"categories","layout":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2022-04-27 19:26:27\ntype: categories\nlayout: categories\ncomments: false\n---\n","updated":"2022-04-27T11:27:14.504Z","path":"categories/index.html","_id":"cl2isrz0j00009gv88q2a6ypy","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2022-04-27T15:58:23.000Z","type":"tags","layout":"tags","comment":false,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2022-04-27 23:58:23\ntype: tags\nlayout: tags\ncomment: false\n---\n","updated":"2022-04-27T15:59:59.603Z","path":"tags/index.html","comments":1,"_id":"cl2isrz0r00029gv809fd8est","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"markdown语法","date":"2022-04-27T06:40:24.000Z","_content":"\n本篇文章主要介绍markdown语法，该文章为转载\n\n原文：https://www.jianshu.com/p/191d1e21f7ed\n\n### 一、标题\n\n在想要设置为标题的文字前面加#来表示\n一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。\n\n示例：\n\n```\n# 一级标题\n## 二级标题\n### 三级标题\n```\n\n效果如下：\n\n# 这是一级标题\n\n## 这是二级标题\n\n### 这是三级标题\n\n#### 这是四级标题\n\n##### 这是五级标题\n\n###### 这是六级标题\n\n---\n\n### 二、字体\n\n- ##### 加粗\n\n要加粗的文字左右分别用两个*号包起来\n\n- ##### 斜体\n\n要倾斜的文字左右分别用一个*号包起来\n\n- ##### 斜体加粗\n\n要倾斜和加粗的文字左右分别用三个*号包起来\n\n- ##### 删除线\n\n要加删除线的文字左右分别用两个~~号包起来\n\n示例：\n\n```undefined\n**这是加粗的文字**\n*这是倾斜的文字*`\n***这是斜体加粗的文字***\n~~这是加删除线的文字~~\n```\n\n效果如下：\n\n**这是加粗的文字**\n*这是倾斜的文字*\n***这是斜体加粗的文字\\***\n~~这是加删除线的文字~~\n\n---\n\n### 三、引用\n\n在引用的文字前加>即可。引用也可以嵌套，如加两个>>三个>>>\nn个...\n貌似可以一直加下去，但没神马卵用\n\n\n\n示例：\n\n```ruby\n>这是引用的内容\n>>这是引用的内容\n>>>这是引用的内容\n```\n\n效果如下：\n\n>这是引用的内容\n>\n>>这是引用的内容\n>>\n>>>这是引用的内容\n\n---\n\n### 四、分割线\n\n三个或者三个以上的 - 或者 * 都可以。\n\n示例：\n\n```undefined\n---\n----\n***\n*****\n```\n\n效果如下：\n可以看到，显示效果是一样的。\n\n------\n\n------\n\n***\n\n*****\n\n### 五、图片\n\n语法：\n\n```bash\n![图片alt](图片地址 ''图片title'')\n\n图片alt就是显示在图片下面的文字，相当于对图片内容的解释。\n图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加\n```\n\n示例：\n\n```cpp\n![blockchain](https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=702257389,1274025419&fm=27&gp=0.jpg \"区块链\")\n```\n\n效果如下：\n\n![blockchain](https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=702257389,1274025419&fm=27&gp=0.jpg \"区块链\")\n\n---\n\n**上传本地图片直接点击导航栏的图片标志，选择图片即可**\n\nmarkdown格式追求的是简单、多平台统一。那么图片的存储就是一个问题，需要用图床，提供统一的外链，这样就不用在不同的平台去处理图片的问题了。才能做到书写一次，各处使用。\n关于图床的选择我写了一篇文章，对网上存在的各种方法做了总结，需要的朋友可以看看。[markdown图床](https://www.jianshu.com/p/ea1eb11db63f)\n\n---\n\n### 六、超链接\n\n语法：\n\n```csharp\n[超链接名](超链接地址 \"超链接title\")\ntitle可加可不加\n```\n\n示例：\n\n```csharp\n[简书](http://jianshu.com)\n[百度](http://baidu.com)\n```\n\n效果如下：\n\n[简书](https://www.jianshu.com/)\n[百度](https://www.baidu.com/)\n\n注：如果想要在新页面中打开的话可以用html语言的a标签代替。\n\n```xml\n<a href=\"超链接地址\" target=\"_blank\">超链接名</a>\n\n示例\n<a href=\"https://www.jianshu.com/u/1f5ac0cf6a8b\" target=\"_blank\">简书</a>\n```\n\n---\n\n### 七、列表\n\n##### 无序列表\n\n语法：\n无序列表用 - + * 任何一种都可以\n\n```undefined\n- 列表内容\n+ 列表内容\n* 列表内容\n\n注意：- + * 跟内容之间都要有一个空格\n```\n\n效果如下：\n\n- 列表内容\n- 列表内容\n- 列表内容\n\n##### 有序列表\n\n语法：\n数字加点\n\n```undefined\n1. 列表内容\n2. 列表内容\n3. 列表内容\n\n注意：序号跟内容之间要有空格\n```\n\n效果如下：\n\n1. 列表内容\n2. 列表内容\n3. 列表内容\n\n##### 列表嵌套\n\n**上一级和下一级之间敲三个空格即可**\n\n- 一级无序列表内容\n  - 二级无序列表内容\n  - 二级无序列表内容\n  - 二级无序列表内容\n- 一级无序列表内容\n  1. 二级有序列表内容\n  2. 二级有序列表内容\n  3. 二级有序列表内容\n\n1. 一级有序列表内容\n   - 二级无序列表内容\n   - 二级无序列表内容\n   - 二级无序列表内容\n2. 一级有序列表内容\n   1. 二级有序列表内容\n   2. 二级有序列表内容\n   3. 二级有序列表内容\n\n---\n\n### 八、表格\n\n语法：\n\n```ruby\n表头|表头|表头\n---|:--:|---:\n内容|内容|内容\n内容|内容|内容\n\n第二行分割表头和内容。\n- 有一个就行，为了对齐，多加了几个\n文字默认居左\n-两边加：表示文字居中\n-右边加：表示文字居右\n注：原生的语法两边都要用 | 包起来。此处省略\n```\n\n示例：\n\n```ruby\n姓名|技能|排行\n--|:--:|--:\n刘备|哭|大哥\n关羽|打|二哥\n张飞|骂|三弟\n```\n\n效果如下：\n\n| 姓名 | 技能 | 排行 |\n| ---- | :--: | ---: |\n| 刘备 |  哭  | 大哥 |\n| 关羽 |  打  | 二哥 |\n| 张飞 |  骂  | 三弟 |\n\n---\n\n### 九、代码\n\n语法：\n单行代码：代码之间分别用一个反引号包起来\n\n```go\n    `代码内容`\n```\n\n代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行\n\n```go\n(```)\n  代码...\n  代码...\n  代码...\n(```)\n```\n\n> 注：为了防止转译，前后三个反引号处加了小括号，实际是没有的。这里只是用来演示，实际中去掉两边小括号即可。\n\n示例：\n\n单行代码\n\n```go\n`create database hero;`\n```\n\n代码块\n\n```kotlin\n(```)\n    function fun(){\n         echo \"这是一句非常牛逼的代码\";\n    }\n    fun();\n(```)\n```\n\n效果如下：\n\n单行代码\n\n```\ncreate database hero;\n```\n\n代码块\n\n```kotlin\nfunction fun(){\n  echo \"这是一句非常牛逼的代码\";\n}\nfun();\n```\n\n---\n\n### 十、流程图\n\n~~~php\n```flow\nst=>start: 开始\nop=>operation: My Operation\ncond=>condition: Yes or No?\ne=>end\nst->op->cond\ncond(yes)->e\ncond(no)->op\n&```\n~~~\n\n效果如下：\n\n```flow\nst=>start: 开始\nop=>operation: My Operation\ncond=>condition: Yes or No?\ne=>end\nst->op->cond\ncond(yes)->e\ncond(no)->op\n&```\n```\n\n> 本博客不支持流程图\n","source":"_posts/markdown语法.md","raw":"---\ntitle: markdown语法\ndate: 2022-04-27 14:40:24\ncategory: 编程教程\ntags:\n- markdown\n---\n\n本篇文章主要介绍markdown语法，该文章为转载\n\n原文：https://www.jianshu.com/p/191d1e21f7ed\n\n### 一、标题\n\n在想要设置为标题的文字前面加#来表示\n一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。\n\n示例：\n\n```\n# 一级标题\n## 二级标题\n### 三级标题\n```\n\n效果如下：\n\n# 这是一级标题\n\n## 这是二级标题\n\n### 这是三级标题\n\n#### 这是四级标题\n\n##### 这是五级标题\n\n###### 这是六级标题\n\n---\n\n### 二、字体\n\n- ##### 加粗\n\n要加粗的文字左右分别用两个*号包起来\n\n- ##### 斜体\n\n要倾斜的文字左右分别用一个*号包起来\n\n- ##### 斜体加粗\n\n要倾斜和加粗的文字左右分别用三个*号包起来\n\n- ##### 删除线\n\n要加删除线的文字左右分别用两个~~号包起来\n\n示例：\n\n```undefined\n**这是加粗的文字**\n*这是倾斜的文字*`\n***这是斜体加粗的文字***\n~~这是加删除线的文字~~\n```\n\n效果如下：\n\n**这是加粗的文字**\n*这是倾斜的文字*\n***这是斜体加粗的文字\\***\n~~这是加删除线的文字~~\n\n---\n\n### 三、引用\n\n在引用的文字前加>即可。引用也可以嵌套，如加两个>>三个>>>\nn个...\n貌似可以一直加下去，但没神马卵用\n\n\n\n示例：\n\n```ruby\n>这是引用的内容\n>>这是引用的内容\n>>>这是引用的内容\n```\n\n效果如下：\n\n>这是引用的内容\n>\n>>这是引用的内容\n>>\n>>>这是引用的内容\n\n---\n\n### 四、分割线\n\n三个或者三个以上的 - 或者 * 都可以。\n\n示例：\n\n```undefined\n---\n----\n***\n*****\n```\n\n效果如下：\n可以看到，显示效果是一样的。\n\n------\n\n------\n\n***\n\n*****\n\n### 五、图片\n\n语法：\n\n```bash\n![图片alt](图片地址 ''图片title'')\n\n图片alt就是显示在图片下面的文字，相当于对图片内容的解释。\n图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加\n```\n\n示例：\n\n```cpp\n![blockchain](https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=702257389,1274025419&fm=27&gp=0.jpg \"区块链\")\n```\n\n效果如下：\n\n![blockchain](https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=702257389,1274025419&fm=27&gp=0.jpg \"区块链\")\n\n---\n\n**上传本地图片直接点击导航栏的图片标志，选择图片即可**\n\nmarkdown格式追求的是简单、多平台统一。那么图片的存储就是一个问题，需要用图床，提供统一的外链，这样就不用在不同的平台去处理图片的问题了。才能做到书写一次，各处使用。\n关于图床的选择我写了一篇文章，对网上存在的各种方法做了总结，需要的朋友可以看看。[markdown图床](https://www.jianshu.com/p/ea1eb11db63f)\n\n---\n\n### 六、超链接\n\n语法：\n\n```csharp\n[超链接名](超链接地址 \"超链接title\")\ntitle可加可不加\n```\n\n示例：\n\n```csharp\n[简书](http://jianshu.com)\n[百度](http://baidu.com)\n```\n\n效果如下：\n\n[简书](https://www.jianshu.com/)\n[百度](https://www.baidu.com/)\n\n注：如果想要在新页面中打开的话可以用html语言的a标签代替。\n\n```xml\n<a href=\"超链接地址\" target=\"_blank\">超链接名</a>\n\n示例\n<a href=\"https://www.jianshu.com/u/1f5ac0cf6a8b\" target=\"_blank\">简书</a>\n```\n\n---\n\n### 七、列表\n\n##### 无序列表\n\n语法：\n无序列表用 - + * 任何一种都可以\n\n```undefined\n- 列表内容\n+ 列表内容\n* 列表内容\n\n注意：- + * 跟内容之间都要有一个空格\n```\n\n效果如下：\n\n- 列表内容\n- 列表内容\n- 列表内容\n\n##### 有序列表\n\n语法：\n数字加点\n\n```undefined\n1. 列表内容\n2. 列表内容\n3. 列表内容\n\n注意：序号跟内容之间要有空格\n```\n\n效果如下：\n\n1. 列表内容\n2. 列表内容\n3. 列表内容\n\n##### 列表嵌套\n\n**上一级和下一级之间敲三个空格即可**\n\n- 一级无序列表内容\n  - 二级无序列表内容\n  - 二级无序列表内容\n  - 二级无序列表内容\n- 一级无序列表内容\n  1. 二级有序列表内容\n  2. 二级有序列表内容\n  3. 二级有序列表内容\n\n1. 一级有序列表内容\n   - 二级无序列表内容\n   - 二级无序列表内容\n   - 二级无序列表内容\n2. 一级有序列表内容\n   1. 二级有序列表内容\n   2. 二级有序列表内容\n   3. 二级有序列表内容\n\n---\n\n### 八、表格\n\n语法：\n\n```ruby\n表头|表头|表头\n---|:--:|---:\n内容|内容|内容\n内容|内容|内容\n\n第二行分割表头和内容。\n- 有一个就行，为了对齐，多加了几个\n文字默认居左\n-两边加：表示文字居中\n-右边加：表示文字居右\n注：原生的语法两边都要用 | 包起来。此处省略\n```\n\n示例：\n\n```ruby\n姓名|技能|排行\n--|:--:|--:\n刘备|哭|大哥\n关羽|打|二哥\n张飞|骂|三弟\n```\n\n效果如下：\n\n| 姓名 | 技能 | 排行 |\n| ---- | :--: | ---: |\n| 刘备 |  哭  | 大哥 |\n| 关羽 |  打  | 二哥 |\n| 张飞 |  骂  | 三弟 |\n\n---\n\n### 九、代码\n\n语法：\n单行代码：代码之间分别用一个反引号包起来\n\n```go\n    `代码内容`\n```\n\n代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行\n\n```go\n(```)\n  代码...\n  代码...\n  代码...\n(```)\n```\n\n> 注：为了防止转译，前后三个反引号处加了小括号，实际是没有的。这里只是用来演示，实际中去掉两边小括号即可。\n\n示例：\n\n单行代码\n\n```go\n`create database hero;`\n```\n\n代码块\n\n```kotlin\n(```)\n    function fun(){\n         echo \"这是一句非常牛逼的代码\";\n    }\n    fun();\n(```)\n```\n\n效果如下：\n\n单行代码\n\n```\ncreate database hero;\n```\n\n代码块\n\n```kotlin\nfunction fun(){\n  echo \"这是一句非常牛逼的代码\";\n}\nfun();\n```\n\n---\n\n### 十、流程图\n\n~~~php\n```flow\nst=>start: 开始\nop=>operation: My Operation\ncond=>condition: Yes or No?\ne=>end\nst->op->cond\ncond(yes)->e\ncond(no)->op\n&```\n~~~\n\n效果如下：\n\n```flow\nst=>start: 开始\nop=>operation: My Operation\ncond=>condition: Yes or No?\ne=>end\nst->op->cond\ncond(yes)->e\ncond(no)->op\n&```\n```\n\n> 本博客不支持流程图\n","slug":"markdown语法","published":1,"updated":"2022-04-27T10:20:25.670Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2isrz0n00019gv88meohxpp","content":"<p>本篇文章主要介绍markdown语法，该文章为转载</p>\n<p>原文：<a class=\"link\"   href=\"https://www.jianshu.com/p/191d1e21f7ed\" >https://www.jianshu.com/p/191d1e21f7ed<i class=\"fas fa-external-link-alt\"></i></a></p>\n<h3 id=\"一、标题\"><a href=\"#一、标题\" class=\"headerlink\" title=\"一、标题\"></a>一、标题</h3><p>在想要设置为标题的文字前面加#来表示<br>一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。</p>\n<p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 一级标题</span><br><span class=\"line\">## 二级标题</span><br><span class=\"line\">### 三级标题</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<h1 id=\"这是一级标题\"><a href=\"#这是一级标题\" class=\"headerlink\" title=\"这是一级标题\"></a>这是一级标题</h1><h2 id=\"这是二级标题\"><a href=\"#这是二级标题\" class=\"headerlink\" title=\"这是二级标题\"></a>这是二级标题</h2><h3 id=\"这是三级标题\"><a href=\"#这是三级标题\" class=\"headerlink\" title=\"这是三级标题\"></a>这是三级标题</h3><h4 id=\"这是四级标题\"><a href=\"#这是四级标题\" class=\"headerlink\" title=\"这是四级标题\"></a>这是四级标题</h4><h5 id=\"这是五级标题\"><a href=\"#这是五级标题\" class=\"headerlink\" title=\"这是五级标题\"></a>这是五级标题</h5><h6 id=\"这是六级标题\"><a href=\"#这是六级标题\" class=\"headerlink\" title=\"这是六级标题\"></a>这是六级标题</h6><hr>\n<h3 id=\"二、字体\"><a href=\"#二、字体\" class=\"headerlink\" title=\"二、字体\"></a>二、字体</h3><ul>\n<li><h5 id=\"加粗\"><a href=\"#加粗\" class=\"headerlink\" title=\"加粗\"></a>加粗</h5></li>\n</ul>\n<p>要加粗的文字左右分别用两个*号包起来</p>\n<ul>\n<li><h5 id=\"斜体\"><a href=\"#斜体\" class=\"headerlink\" title=\"斜体\"></a>斜体</h5></li>\n</ul>\n<p>要倾斜的文字左右分别用一个*号包起来</p>\n<ul>\n<li><h5 id=\"斜体加粗\"><a href=\"#斜体加粗\" class=\"headerlink\" title=\"斜体加粗\"></a>斜体加粗</h5></li>\n</ul>\n<p>要倾斜和加粗的文字左右分别用三个*号包起来</p>\n<ul>\n<li><h5 id=\"删除线\"><a href=\"#删除线\" class=\"headerlink\" title=\"删除线\"></a>删除线</h5></li>\n</ul>\n<p>要加删除线的文字左右分别用两个~~号包起来</p>\n<p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">**这是加粗的文字**</span><br><span class=\"line\">*这是倾斜的文字*`</span><br><span class=\"line\">***这是斜体加粗的文字***</span><br><span class=\"line\">~~这是加删除线的文字~~</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<p><strong>这是加粗的文字</strong><br><em>这是倾斜的文字</em><br>*<strong>这是斜体加粗的文字*</strong><br><del>这是加删除线的文字</del></p>\n<hr>\n<h3 id=\"三、引用\"><a href=\"#三、引用\" class=\"headerlink\" title=\"三、引用\"></a>三、引用</h3><p>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;<br>n个…<br>貌似可以一直加下去，但没神马卵用</p>\n<p>示例：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;这是引用的内容</span><br><span class=\"line\">&gt;&gt;这是引用的内容</span><br><span class=\"line\">&gt;&gt;&gt;这是引用的内容</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<blockquote>\n<p>这是引用的内容</p>\n<blockquote>\n<p>这是引用的内容</p>\n<blockquote>\n<p>这是引用的内容</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<hr>\n<h3 id=\"四、分割线\"><a href=\"#四、分割线\" class=\"headerlink\" title=\"四、分割线\"></a>四、分割线</h3><p>三个或者三个以上的 - 或者 * 都可以。</p>\n<p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">----</span><br><span class=\"line\">***</span><br><span class=\"line\">*****</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：<br>可以看到，显示效果是一样的。</p>\n<hr>\n<hr>\n<hr>\n<hr>\n<h3 id=\"五、图片\"><a href=\"#五、图片\" class=\"headerlink\" title=\"五、图片\"></a>五、图片</h3><p>语法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![图片alt](图片地址 <span class=\"string\">&#x27;&#x27;</span>图片title<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">图片alt就是显示在图片下面的文字，相当于对图片内容的解释。</span><br><span class=\"line\">图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加</span><br></pre></td></tr></table></figure>\n\n<p>示例：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![blockchain](https:<span class=\"comment\">//ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=702257389,1274025419&amp;fm=27&amp;gp=0.jpg &quot;区块链&quot;)</span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<p><img src=\"https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=702257389,1274025419&fm=27&gp=0.jpg\" alt=\"blockchain\" title=\"区块链\"></p>\n<hr>\n<p><strong>上传本地图片直接点击导航栏的图片标志，选择图片即可</strong></p>\n<p>markdown格式追求的是简单、多平台统一。那么图片的存储就是一个问题，需要用图床，提供统一的外链，这样就不用在不同的平台去处理图片的问题了。才能做到书写一次，各处使用。<br>关于图床的选择我写了一篇文章，对网上存在的各种方法做了总结，需要的朋友可以看看。<a class=\"link\"   href=\"https://www.jianshu.com/p/ea1eb11db63f\" >markdown图床<i class=\"fas fa-external-link-alt\"></i></a></p>\n<hr>\n<h3 id=\"六、超链接\"><a href=\"#六、超链接\" class=\"headerlink\" title=\"六、超链接\"></a>六、超链接</h3><p>语法：</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[超链接名](超链接地址 <span class=\"string\">&quot;超链接title&quot;</span>)</span><br><span class=\"line\">title可加可不加</span><br></pre></td></tr></table></figure>\n\n<p>示例：</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[简书](http:<span class=\"comment\">//jianshu.com)</span></span><br><span class=\"line\">[百度](http:<span class=\"comment\">//baidu.com)</span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<p><a class=\"link\"   href=\"https://www.jianshu.com/\" >简书<i class=\"fas fa-external-link-alt\"></i></a><br><a class=\"link\"   href=\"https://www.baidu.com/\" >百度<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>注：如果想要在新页面中打开的话可以用html语言的a标签代替。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;超链接地址&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>超链接名<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">示例</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://www.jianshu.com/u/1f5ac0cf6a8b&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>简书<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"七、列表\"><a href=\"#七、列表\" class=\"headerlink\" title=\"七、列表\"></a>七、列表</h3><h5 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h5><p>语法：<br>无序列表用 - + * 任何一种都可以</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 列表内容</span><br><span class=\"line\">+ 列表内容</span><br><span class=\"line\">* 列表内容</span><br><span class=\"line\"></span><br><span class=\"line\">注意：- + * 跟内容之间都要有一个空格</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<ul>\n<li>列表内容</li>\n<li>列表内容</li>\n<li>列表内容</li>\n</ul>\n<h5 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h5><p>语法：<br>数字加点</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 列表内容</span><br><span class=\"line\">2. 列表内容</span><br><span class=\"line\">3. 列表内容</span><br><span class=\"line\"></span><br><span class=\"line\">注意：序号跟内容之间要有空格</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<ol>\n<li>列表内容</li>\n<li>列表内容</li>\n<li>列表内容</li>\n</ol>\n<h5 id=\"列表嵌套\"><a href=\"#列表嵌套\" class=\"headerlink\" title=\"列表嵌套\"></a>列表嵌套</h5><p><strong>上一级和下一级之间敲三个空格即可</strong></p>\n<ul>\n<li>一级无序列表内容<ul>\n<li>二级无序列表内容</li>\n<li>二级无序列表内容</li>\n<li>二级无序列表内容</li>\n</ul>\n</li>\n<li>一级无序列表内容<ol>\n<li>二级有序列表内容</li>\n<li>二级有序列表内容</li>\n<li>二级有序列表内容</li>\n</ol>\n</li>\n</ul>\n<ol>\n<li>一级有序列表内容<ul>\n<li>二级无序列表内容</li>\n<li>二级无序列表内容</li>\n<li>二级无序列表内容</li>\n</ul>\n</li>\n<li>一级有序列表内容<ol>\n<li>二级有序列表内容</li>\n<li>二级有序列表内容</li>\n<li>二级有序列表内容</li>\n</ol>\n</li>\n</ol>\n<hr>\n<h3 id=\"八、表格\"><a href=\"#八、表格\" class=\"headerlink\" title=\"八、表格\"></a>八、表格</h3><p>语法：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">表头|<span class=\"params\">表头</span>|表头</span><br><span class=\"line\">---|<span class=\"params\">:--:</span>|---:</span><br><span class=\"line\">内容|<span class=\"params\">内容</span>|内容</span><br><span class=\"line\">内容|<span class=\"params\">内容</span>|内容</span><br><span class=\"line\"></span><br><span class=\"line\">第二行分割表头和内容。</span><br><span class=\"line\">- 有一个就行，为了对齐，多加了几个</span><br><span class=\"line\">文字默认居左</span><br><span class=\"line\">-两边加：表示文字居中</span><br><span class=\"line\">-右边加：表示文字居右</span><br><span class=\"line\">注：原生的语法两边都要用 |<span class=\"params\"> 包起来。此处省略</span></span><br></pre></td></tr></table></figure>\n\n<p>示例：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">姓名|<span class=\"params\">技能</span>|排行</span><br><span class=\"line\">--|<span class=\"params\">:--:</span>|--:</span><br><span class=\"line\">刘备|<span class=\"params\">哭</span>|大哥</span><br><span class=\"line\">关羽|<span class=\"params\">打</span>|二哥</span><br><span class=\"line\">张飞|<span class=\"params\">骂</span>|三弟</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th align=\"center\">技能</th>\n<th align=\"right\">排行</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>刘备</td>\n<td align=\"center\">哭</td>\n<td align=\"right\">大哥</td>\n</tr>\n<tr>\n<td>关羽</td>\n<td align=\"center\">打</td>\n<td align=\"right\">二哥</td>\n</tr>\n<tr>\n<td>张飞</td>\n<td align=\"center\">骂</td>\n<td align=\"right\">三弟</td>\n</tr>\n</tbody></table>\n<hr>\n<h3 id=\"九、代码\"><a href=\"#九、代码\" class=\"headerlink\" title=\"九、代码\"></a>九、代码</h3><p>语法：<br>单行代码：代码之间分别用一个反引号包起来</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">`代码内容`</span></span><br></pre></td></tr></table></figure>\n\n<p>代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"string\">``</span><span class=\"string\">`)</span></span><br><span class=\"line\"><span class=\"string\">  代码...</span></span><br><span class=\"line\"><span class=\"string\">  代码...</span></span><br><span class=\"line\"><span class=\"string\">  代码...</span></span><br><span class=\"line\"><span class=\"string\">(`</span><span class=\"string\">``</span>)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>注：为了防止转译，前后三个反引号处加了小括号，实际是没有的。这里只是用来演示，实际中去掉两边小括号即可。</p>\n</blockquote>\n<p>示例：</p>\n<p>单行代码</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">`create database hero;`</span></span><br></pre></td></tr></table></figure>\n\n<p>代码块</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(```)</span><br><span class=\"line\">    function <span class=\"function\"><span class=\"title\">fun</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">         echo <span class=\"string\">&quot;这是一句非常牛逼的代码&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">fun</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">(```)</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<p>单行代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create database hero;</span><br></pre></td></tr></table></figure>\n\n<p>代码块</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function <span class=\"function\"><span class=\"title\">fun</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">  echo <span class=\"string\">&quot;这是一句非常牛逼的代码&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">fun</span><span class=\"params\">()</span></span>;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"十、流程图\"><a href=\"#十、流程图\" class=\"headerlink\" title=\"十、流程图\"></a>十、流程图</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">```flow</span><br><span class=\"line\">st=&gt;start: 开始</span><br><span class=\"line\">op=&gt;operation: My Operation</span><br><span class=\"line\">cond=&gt;condition: Yes <span class=\"keyword\">or</span> No?</span><br><span class=\"line\">e=&gt;end</span><br><span class=\"line\">st-&gt;op-&gt;cond</span><br><span class=\"line\"><span class=\"title function_ invoke__\">cond</span>(yes)-&gt;e</span><br><span class=\"line\"><span class=\"title function_ invoke__\">cond</span>(no)-&gt;op</span><br><span class=\"line\">&amp;```</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">st=&gt;start: 开始</span><br><span class=\"line\">op=&gt;operation: My Operation</span><br><span class=\"line\">cond=&gt;condition: Yes or No?</span><br><span class=\"line\">e=&gt;end</span><br><span class=\"line\">st-&gt;op-&gt;cond</span><br><span class=\"line\">cond(yes)-&gt;e</span><br><span class=\"line\">cond(no)-&gt;op</span><br><span class=\"line\">&amp;```</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>本博客不支持流程图</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>本篇文章主要介绍markdown语法，该文章为转载</p>\n<p>原文：<a class=\"link\"   href=\"https://www.jianshu.com/p/191d1e21f7ed\" >https://www.jianshu.com/p/191d1e21f7ed<i class=\"fas fa-external-link-alt\"></i></a></p>\n<h3 id=\"一、标题\"><a href=\"#一、标题\" class=\"headerlink\" title=\"一、标题\"></a>一、标题</h3><p>在想要设置为标题的文字前面加#来表示<br>一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。</p>\n<p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 一级标题</span><br><span class=\"line\">## 二级标题</span><br><span class=\"line\">### 三级标题</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<h1 id=\"这是一级标题\"><a href=\"#这是一级标题\" class=\"headerlink\" title=\"这是一级标题\"></a>这是一级标题</h1><h2 id=\"这是二级标题\"><a href=\"#这是二级标题\" class=\"headerlink\" title=\"这是二级标题\"></a>这是二级标题</h2><h3 id=\"这是三级标题\"><a href=\"#这是三级标题\" class=\"headerlink\" title=\"这是三级标题\"></a>这是三级标题</h3><h4 id=\"这是四级标题\"><a href=\"#这是四级标题\" class=\"headerlink\" title=\"这是四级标题\"></a>这是四级标题</h4><h5 id=\"这是五级标题\"><a href=\"#这是五级标题\" class=\"headerlink\" title=\"这是五级标题\"></a>这是五级标题</h5><h6 id=\"这是六级标题\"><a href=\"#这是六级标题\" class=\"headerlink\" title=\"这是六级标题\"></a>这是六级标题</h6><hr>\n<h3 id=\"二、字体\"><a href=\"#二、字体\" class=\"headerlink\" title=\"二、字体\"></a>二、字体</h3><ul>\n<li><h5 id=\"加粗\"><a href=\"#加粗\" class=\"headerlink\" title=\"加粗\"></a>加粗</h5></li>\n</ul>\n<p>要加粗的文字左右分别用两个*号包起来</p>\n<ul>\n<li><h5 id=\"斜体\"><a href=\"#斜体\" class=\"headerlink\" title=\"斜体\"></a>斜体</h5></li>\n</ul>\n<p>要倾斜的文字左右分别用一个*号包起来</p>\n<ul>\n<li><h5 id=\"斜体加粗\"><a href=\"#斜体加粗\" class=\"headerlink\" title=\"斜体加粗\"></a>斜体加粗</h5></li>\n</ul>\n<p>要倾斜和加粗的文字左右分别用三个*号包起来</p>\n<ul>\n<li><h5 id=\"删除线\"><a href=\"#删除线\" class=\"headerlink\" title=\"删除线\"></a>删除线</h5></li>\n</ul>\n<p>要加删除线的文字左右分别用两个~~号包起来</p>\n<p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">**这是加粗的文字**</span><br><span class=\"line\">*这是倾斜的文字*`</span><br><span class=\"line\">***这是斜体加粗的文字***</span><br><span class=\"line\">~~这是加删除线的文字~~</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<p><strong>这是加粗的文字</strong><br><em>这是倾斜的文字</em><br>*<strong>这是斜体加粗的文字*</strong><br><del>这是加删除线的文字</del></p>\n<hr>\n<h3 id=\"三、引用\"><a href=\"#三、引用\" class=\"headerlink\" title=\"三、引用\"></a>三、引用</h3><p>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;<br>n个…<br>貌似可以一直加下去，但没神马卵用</p>\n<p>示例：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;这是引用的内容</span><br><span class=\"line\">&gt;&gt;这是引用的内容</span><br><span class=\"line\">&gt;&gt;&gt;这是引用的内容</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<blockquote>\n<p>这是引用的内容</p>\n<blockquote>\n<p>这是引用的内容</p>\n<blockquote>\n<p>这是引用的内容</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<hr>\n<h3 id=\"四、分割线\"><a href=\"#四、分割线\" class=\"headerlink\" title=\"四、分割线\"></a>四、分割线</h3><p>三个或者三个以上的 - 或者 * 都可以。</p>\n<p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">----</span><br><span class=\"line\">***</span><br><span class=\"line\">*****</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：<br>可以看到，显示效果是一样的。</p>\n<hr>\n<hr>\n<hr>\n<hr>\n<h3 id=\"五、图片\"><a href=\"#五、图片\" class=\"headerlink\" title=\"五、图片\"></a>五、图片</h3><p>语法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![图片alt](图片地址 <span class=\"string\">&#x27;&#x27;</span>图片title<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">图片alt就是显示在图片下面的文字，相当于对图片内容的解释。</span><br><span class=\"line\">图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加</span><br></pre></td></tr></table></figure>\n\n<p>示例：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![blockchain](https:<span class=\"comment\">//ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=702257389,1274025419&amp;fm=27&amp;gp=0.jpg &quot;区块链&quot;)</span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<p><img src=\"https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=702257389,1274025419&fm=27&gp=0.jpg\" alt=\"blockchain\" title=\"区块链\"></p>\n<hr>\n<p><strong>上传本地图片直接点击导航栏的图片标志，选择图片即可</strong></p>\n<p>markdown格式追求的是简单、多平台统一。那么图片的存储就是一个问题，需要用图床，提供统一的外链，这样就不用在不同的平台去处理图片的问题了。才能做到书写一次，各处使用。<br>关于图床的选择我写了一篇文章，对网上存在的各种方法做了总结，需要的朋友可以看看。<a class=\"link\"   href=\"https://www.jianshu.com/p/ea1eb11db63f\" >markdown图床<i class=\"fas fa-external-link-alt\"></i></a></p>\n<hr>\n<h3 id=\"六、超链接\"><a href=\"#六、超链接\" class=\"headerlink\" title=\"六、超链接\"></a>六、超链接</h3><p>语法：</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[超链接名](超链接地址 <span class=\"string\">&quot;超链接title&quot;</span>)</span><br><span class=\"line\">title可加可不加</span><br></pre></td></tr></table></figure>\n\n<p>示例：</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[简书](http:<span class=\"comment\">//jianshu.com)</span></span><br><span class=\"line\">[百度](http:<span class=\"comment\">//baidu.com)</span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<p><a class=\"link\"   href=\"https://www.jianshu.com/\" >简书<i class=\"fas fa-external-link-alt\"></i></a><br><a class=\"link\"   href=\"https://www.baidu.com/\" >百度<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>注：如果想要在新页面中打开的话可以用html语言的a标签代替。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;超链接地址&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>超链接名<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">示例</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://www.jianshu.com/u/1f5ac0cf6a8b&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>简书<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"七、列表\"><a href=\"#七、列表\" class=\"headerlink\" title=\"七、列表\"></a>七、列表</h3><h5 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h5><p>语法：<br>无序列表用 - + * 任何一种都可以</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 列表内容</span><br><span class=\"line\">+ 列表内容</span><br><span class=\"line\">* 列表内容</span><br><span class=\"line\"></span><br><span class=\"line\">注意：- + * 跟内容之间都要有一个空格</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<ul>\n<li>列表内容</li>\n<li>列表内容</li>\n<li>列表内容</li>\n</ul>\n<h5 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h5><p>语法：<br>数字加点</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 列表内容</span><br><span class=\"line\">2. 列表内容</span><br><span class=\"line\">3. 列表内容</span><br><span class=\"line\"></span><br><span class=\"line\">注意：序号跟内容之间要有空格</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<ol>\n<li>列表内容</li>\n<li>列表内容</li>\n<li>列表内容</li>\n</ol>\n<h5 id=\"列表嵌套\"><a href=\"#列表嵌套\" class=\"headerlink\" title=\"列表嵌套\"></a>列表嵌套</h5><p><strong>上一级和下一级之间敲三个空格即可</strong></p>\n<ul>\n<li>一级无序列表内容<ul>\n<li>二级无序列表内容</li>\n<li>二级无序列表内容</li>\n<li>二级无序列表内容</li>\n</ul>\n</li>\n<li>一级无序列表内容<ol>\n<li>二级有序列表内容</li>\n<li>二级有序列表内容</li>\n<li>二级有序列表内容</li>\n</ol>\n</li>\n</ul>\n<ol>\n<li>一级有序列表内容<ul>\n<li>二级无序列表内容</li>\n<li>二级无序列表内容</li>\n<li>二级无序列表内容</li>\n</ul>\n</li>\n<li>一级有序列表内容<ol>\n<li>二级有序列表内容</li>\n<li>二级有序列表内容</li>\n<li>二级有序列表内容</li>\n</ol>\n</li>\n</ol>\n<hr>\n<h3 id=\"八、表格\"><a href=\"#八、表格\" class=\"headerlink\" title=\"八、表格\"></a>八、表格</h3><p>语法：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">表头|<span class=\"params\">表头</span>|表头</span><br><span class=\"line\">---|<span class=\"params\">:--:</span>|---:</span><br><span class=\"line\">内容|<span class=\"params\">内容</span>|内容</span><br><span class=\"line\">内容|<span class=\"params\">内容</span>|内容</span><br><span class=\"line\"></span><br><span class=\"line\">第二行分割表头和内容。</span><br><span class=\"line\">- 有一个就行，为了对齐，多加了几个</span><br><span class=\"line\">文字默认居左</span><br><span class=\"line\">-两边加：表示文字居中</span><br><span class=\"line\">-右边加：表示文字居右</span><br><span class=\"line\">注：原生的语法两边都要用 |<span class=\"params\"> 包起来。此处省略</span></span><br></pre></td></tr></table></figure>\n\n<p>示例：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">姓名|<span class=\"params\">技能</span>|排行</span><br><span class=\"line\">--|<span class=\"params\">:--:</span>|--:</span><br><span class=\"line\">刘备|<span class=\"params\">哭</span>|大哥</span><br><span class=\"line\">关羽|<span class=\"params\">打</span>|二哥</span><br><span class=\"line\">张飞|<span class=\"params\">骂</span>|三弟</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th align=\"center\">技能</th>\n<th align=\"right\">排行</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>刘备</td>\n<td align=\"center\">哭</td>\n<td align=\"right\">大哥</td>\n</tr>\n<tr>\n<td>关羽</td>\n<td align=\"center\">打</td>\n<td align=\"right\">二哥</td>\n</tr>\n<tr>\n<td>张飞</td>\n<td align=\"center\">骂</td>\n<td align=\"right\">三弟</td>\n</tr>\n</tbody></table>\n<hr>\n<h3 id=\"九、代码\"><a href=\"#九、代码\" class=\"headerlink\" title=\"九、代码\"></a>九、代码</h3><p>语法：<br>单行代码：代码之间分别用一个反引号包起来</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">`代码内容`</span></span><br></pre></td></tr></table></figure>\n\n<p>代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"string\">``</span><span class=\"string\">`)</span></span><br><span class=\"line\"><span class=\"string\">  代码...</span></span><br><span class=\"line\"><span class=\"string\">  代码...</span></span><br><span class=\"line\"><span class=\"string\">  代码...</span></span><br><span class=\"line\"><span class=\"string\">(`</span><span class=\"string\">``</span>)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>注：为了防止转译，前后三个反引号处加了小括号，实际是没有的。这里只是用来演示，实际中去掉两边小括号即可。</p>\n</blockquote>\n<p>示例：</p>\n<p>单行代码</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">`create database hero;`</span></span><br></pre></td></tr></table></figure>\n\n<p>代码块</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(```)</span><br><span class=\"line\">    function <span class=\"function\"><span class=\"title\">fun</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">         echo <span class=\"string\">&quot;这是一句非常牛逼的代码&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">fun</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">(```)</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<p>单行代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create database hero;</span><br></pre></td></tr></table></figure>\n\n<p>代码块</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function <span class=\"function\"><span class=\"title\">fun</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">  echo <span class=\"string\">&quot;这是一句非常牛逼的代码&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">fun</span><span class=\"params\">()</span></span>;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"十、流程图\"><a href=\"#十、流程图\" class=\"headerlink\" title=\"十、流程图\"></a>十、流程图</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">```flow</span><br><span class=\"line\">st=&gt;start: 开始</span><br><span class=\"line\">op=&gt;operation: My Operation</span><br><span class=\"line\">cond=&gt;condition: Yes <span class=\"keyword\">or</span> No?</span><br><span class=\"line\">e=&gt;end</span><br><span class=\"line\">st-&gt;op-&gt;cond</span><br><span class=\"line\"><span class=\"title function_ invoke__\">cond</span>(yes)-&gt;e</span><br><span class=\"line\"><span class=\"title function_ invoke__\">cond</span>(no)-&gt;op</span><br><span class=\"line\">&amp;```</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">st=&gt;start: 开始</span><br><span class=\"line\">op=&gt;operation: My Operation</span><br><span class=\"line\">cond=&gt;condition: Yes or No?</span><br><span class=\"line\">e=&gt;end</span><br><span class=\"line\">st-&gt;op-&gt;cond</span><br><span class=\"line\">cond(yes)-&gt;e</span><br><span class=\"line\">cond(no)-&gt;op</span><br><span class=\"line\">&amp;```</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>本博客不支持流程图</p>\n</blockquote>\n"},{"title":"【观影记录】三傻大闹宝莱坞","date":"2022-04-22T07:58:47.000Z","comment":true,"_content":"","source":"_posts/【观影记录】三傻大闹宝莱坞.md","raw":"---\ntitle: 【观影记录】三傻大闹宝莱坞\ndate: 2022-04-22 15:58:47\ntags: [电影,施工中]\ncategory: 观影记录\ncomment: true\n---\n","slug":"【观影记录】三傻大闹宝莱坞","published":1,"updated":"2022-04-28T09:20:41.173Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2isrz0s00039gv8453k42qn","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"抱歉, 这个密码不太对, 请再试试.\" data-whm=\"欢迎.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"c948ab4558dc83f98841885cc78fd1fc802e2262c4ce74f9a8a23d57a8a9e0a5\">22064b17c03cb0c0e58c99349b6889d08ea8549dd0d4c00f665b8881b304afe8</script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">请输入密码.</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"excerpt":"这篇文章被加密了，需要输入密码查看哦。","more":"这篇文章被加密了，需要输入密码查看哦。","origin":"","encrypt":true},{"title":"【观影记录】岁月神偷","date":"2022-04-28T07:56:27.000Z","comment":true,"_content":"\n> 原以为被偷走的只是青春，没想到连生命都被岁月无情的偷走了。\n\n## 前言\n\n2022年四月，二战上岸，廊坊北京长达40天的疫情，让我终于能够抛下一切包袱做一些我想做却又“不愿意做”的事情，比如阅读和观影，还有开博客。其实我之前的生活也没有那么忙碌~~基于我一直摆烂的态度~~，但就是沉不下心来做一些事情，每天可以用浑浑噩噩来形容，晚上不够困的时候躺在床上总有心事睡不着，非要把自己熬到困得睁不开眼才能睡着，早上也起不来。上岸之后一下觉得人生“拨云见日”，很轻松的很自然就能保持早睡早起的习惯~~其实也就是晚上12点睡早上8点起~~，然后就想着要做一些事情，保持阅读，写作的习惯。起初想要看书，但发现极长时间都在碎片化获取信息，没有进行过深阅读的我很难静下心来读一本书，于是就想到了可以从完整的看电影开始养成长阅读的习惯。于是我决定开启豆瓣top250补全计划，每天坚持看一部电影，然后对感兴趣的部分写影评。\n\n开博客也是想培养一些写作习惯和代码习惯，还有满足一些分享的欲望，我渴望分享，但又不想在社交媒体上留下过多的关注，所以开个人博客是个很好的选择。之前已经看了几部影片，开博客后看了《岁月神偷》，我会慢慢的写一些留下深刻印象的电影。\n\n## 岁月是个“小偷”\n\n起初看到《岁月神偷》这个名字，我以为如同《致青春》等片一样讲的是对过去青春，没想到其实讲的是生命。罗进一本该灿烂辉煌的生命就这么被岁月偷走了。\n","source":"_posts/【观影记录】岁月神偷.md","raw":"---\ntitle: 【观影记录】岁月神偷\ndate: 2022-04-28 15:56:27\ntags: [电影,施工中]\ncategory: 观影记录\ncomment: true\n---\n\n> 原以为被偷走的只是青春，没想到连生命都被岁月无情的偷走了。\n\n## 前言\n\n2022年四月，二战上岸，廊坊北京长达40天的疫情，让我终于能够抛下一切包袱做一些我想做却又“不愿意做”的事情，比如阅读和观影，还有开博客。其实我之前的生活也没有那么忙碌~~基于我一直摆烂的态度~~，但就是沉不下心来做一些事情，每天可以用浑浑噩噩来形容，晚上不够困的时候躺在床上总有心事睡不着，非要把自己熬到困得睁不开眼才能睡着，早上也起不来。上岸之后一下觉得人生“拨云见日”，很轻松的很自然就能保持早睡早起的习惯~~其实也就是晚上12点睡早上8点起~~，然后就想着要做一些事情，保持阅读，写作的习惯。起初想要看书，但发现极长时间都在碎片化获取信息，没有进行过深阅读的我很难静下心来读一本书，于是就想到了可以从完整的看电影开始养成长阅读的习惯。于是我决定开启豆瓣top250补全计划，每天坚持看一部电影，然后对感兴趣的部分写影评。\n\n开博客也是想培养一些写作习惯和代码习惯，还有满足一些分享的欲望，我渴望分享，但又不想在社交媒体上留下过多的关注，所以开个人博客是个很好的选择。之前已经看了几部影片，开博客后看了《岁月神偷》，我会慢慢的写一些留下深刻印象的电影。\n\n## 岁月是个“小偷”\n\n起初看到《岁月神偷》这个名字，我以为如同《致青春》等片一样讲的是对过去青春，没想到其实讲的是生命。罗进一本该灿烂辉煌的生命就这么被岁月偷走了。\n","slug":"【观影记录】岁月神偷","published":1,"updated":"2022-04-28T09:20:02.124Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2isrz0y00069gv8g4z6e33y","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"抱歉, 这个密码不太对, 请再试试.\" data-whm=\"欢迎.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"65c85034834fe5cc53ea281aacc1bb719a6dfb74c04547a2bbcc9c876529bdc8\">22064b17c03cb0c0e58c99349b6889d0e918231d1b5b54fbbe954408a3cd5f3fa6572acb19ab9f3a427f6f6b6a32304c037cff11c6a059782b8c9940dffa1fe0b63711043aeab1965f17057bd2b17850d977bccaa7e6e2e5a8c9cf2b8399692f831e434686d108e88108c0b4e43db9c9d0a550777670cd48e5f9584a4a6db03438ee31af77d0b28843946c7ac34e865a6a3ccf624232e44b1033d15fb21cf088bafaa40600b3340ce273fcf16533cf4cfb265b64bfb2e38fca6c3845dbb47a9920abfa99e58de550e51945bdde67586f2aa96f7b1153287c8abfbaca93953bfecfe593c161b08711a93105be06a35f59f48daa68bb779d8aca9e46dc01da8a61c62beff0cb87978206f4edfe55a68f3f7fbecce609b8e9de244427fb6120ea91f73607dcc03af0f5a40ef1cb31bf69ee927120e6060461355d2722294ab25744b4afbc3ca3d3bccca0b89cdfecf1d4f84adf3b05f1390540e800957141b911e224f0957b6631aea6ee68adb05eefb2ca6464377a8cfded7b2c7d883b26822ed004e50a95ed22a683504b8707d82b50463ed24c8b3ff879e43d9d79f8929a2f8cc961ed397a7a8a723851e21ece607e74e189ad457125a788c1c3eabdc80aadec8f6f9662321a85a79960d5eb2a520c976a609bc1c0473055ee863925b62f36082686d2d24af185f72c59298b98b2bfa368704ffb03330ce59080e841c6e753057eb482c2ab542f2eb89548e994d37d543e2a2f376d51d87d07e8ced09c8c05527117567d688fb5e445a7341a737471abc6d949b621571dbd99ac4e8a5ff69ffa23624178a671503304467aea5454eb95e582fdcfacea5988b38836405ee91ac2879795d9aec34eab552af9715e3d15054fad57631e00620198ac8b1c3e1b01c81e7f71e1ae6e1b742a4958b14409a8ebcb387d8094798c328559a0e20c7e6629b9ff3a59d15bed25b643939e027ce6a79658793b1ee3729a5b3176717e8d514d642ad29d6ff6f4896d6fa19eb34b4f737371fe4c8bb8f47a1b008f174a1f8898bda82aeae3db12da421d700c25d35c609528eb30fb0c2ecd03c557212218a69db338e1ddfcd23c3fae2a6df88036a39a13ab09dda9feaaae74fc3cd9f454d2a190f34e01ec8eb2fcbff872ca5dd6a2ecc08c7f8ee16f66841996dfba2ff71ef2bc3c29c02a8cfa5818e8eaeab514017851848fb22e2ac803b1d06cab3194f5baac2b8ab1d95210ee12a7d91edd870f2591c191a815956b7b04d9a74bbc26f3ccaf176b8a9529f8e7f10c6de7254debdf9fcb7bdf44ce97860214a5343e520d07788ee7e26481b4aa8f998af07a620a89f813556f9390f61983285e9faf2c3b43de44a7da22358446f9b249a3dbbb2fe788e3592b4ea1c13f45d10d40ab1dd4384fbdd19f1ff8c7b3269924988cdc22c4ba3c8e64a9df8c8952261732044c87d7ea40c34575035e3a55b9a84dc5a7dfdee66a4ab1661ab0ff06157c58571a00f7224c0fc5fcfbfac51bedc1b43eb554e7706494c6cee4052e813ab8ecaa3d3fd95dd5a310dbbd9af6068db9ff18e3c729074b9f91f17560b4084645e13eaa4b257dd0fcbbecb234358949c4365b40fe53b99c3fac632cf30d78dce656209e8c6ded549ef08257d7566ce827cc29ab0e3099e6049ddd8d6a3ce087996021f3387084b5665a4c33e4152fbc1bc770485523340cbef36bb2ec0f2011ff38fe20b24029ce95944be0eaee3242acea766a3f5edbca9c1df4906c2939b6462eab374c0957b8ea6ac702168fc4c2d50a12fc19ff0e98b7bd32203b166a8d62f4ea7351e49c073d5ef931c36f4aa183a504bda44adaaf094f841bda9cafac93265da2de83ecc00dbb552d72ca8e39396a7c0f5b9e7659ca9405298d76bef47fa056e94f8e17faf8a4248f1243f096fcdc7e6f24e2d41e4bceb718f982754c1dc060f944144ceb20053d54a8d3c16a4152e5b9ddec376c8ccabafe93f8bb8004e0a2d287e5b3d48f7f3fcc21f30616a9df3a4ae4d24cf216a591e1b351cbc48a8af18bf83c57f398cd4fcabf17e03ba7ad398e0161d78a5b3ace73a5c7ea2b5de20dfec1d667682bcec63bbe8bd8aab799cecdd0ce61cb893713fd4a9649c43f5dd7bc6254b85e422756b8b68b40715f0fb0b8935d42730ef52c3299ed95c9d016039de695f7ed5fe205598a57c1fa4a9c1b9abdf96e57beec9965223b881361ece140267425ab360182089d6e2549ba462ea2b5a5a8a3746f7e044ee2f19bdc3fffdb978efdd406cf90c9c9468a99be2a712e223c8359d07ff879c0f53682fcccc3390183415539b72f9b51694864abf5806923521b35a3f2fe5d7d070a47458259a29e47514a1be1094147e341d662ca13936ada0aa604f92f3f57e68caa3caadc97bebb108bdc88f59c319fabc1f7a8d54cb12bb5962d09da6421f17e86278a3bc8000a90493b6ea082d9bbdcabeb5f19ed48eadc32e0e2f439a90c0a5deda8e3a87401e32f8ce509d8708a6fd2fad44d9f5b1d07357a46c19e49d253236573e7210d119dad89c83f8645cb5d3016e47e1a1626d80d386f8115e01c7bff3ce9b12f72c97fea3ff03c22307dd4c872eb8f1e1c5d7b37c897cee95d797a832f5126fb700063eb9dd484fb4f0946972f4663106c04fc3d2b64314f35d2fef23137d85ada541f4002e885a85f4b3bdd966cfa0cd77a3dc99ef74df896e9cc49ce44d33b0934610ec92163b679005fe6b61fe6016e96fe1800589cbb9f5b44ca113727879cee9a3281d496ed465311bd4e3f1337fa38307560e6f070b741c4a054100f061e16f76087b195b4923c2d6f2cccad51d19e8774cd4bb39a3faa8975082d9cbc31b42cba4881d6d8ad77ba7465751b2cbba4</script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">请输入密码.</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"excerpt":"这篇文章被加密了，需要输入密码查看哦。","more":"这篇文章被加密了，需要输入密码查看哦。","origin":"<blockquote>\n<p>原以为被偷走的只是青春，没想到连生命都被岁月无情的偷走了。</p>\n</blockquote>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>2022年四月，二战上岸，廊坊北京长达40天的疫情，让我终于能够抛下一切包袱做一些我想做却又“不愿意做”的事情，比如阅读和观影，还有开博客。其实我之前的生活也没有那么忙碌<del>基于我一直摆烂的态度</del>，但就是沉不下心来做一些事情，每天可以用浑浑噩噩来形容，晚上不够困的时候躺在床上总有心事睡不着，非要把自己熬到困得睁不开眼才能睡着，早上也起不来。上岸之后一下觉得人生“拨云见日”，很轻松的很自然就能保持早睡早起的习惯<del>其实也就是晚上12点睡早上8点起</del>，然后就想着要做一些事情，保持阅读，写作的习惯。起初想要看书，但发现极长时间都在碎片化获取信息，没有进行过深阅读的我很难静下心来读一本书，于是就想到了可以从完整的看电影开始养成长阅读的习惯。于是我决定开启豆瓣top250补全计划，每天坚持看一部电影，然后对感兴趣的部分写影评。</p>\n<p>开博客也是想培养一些写作习惯和代码习惯，还有满足一些分享的欲望，我渴望分享，但又不想在社交媒体上留下过多的关注，所以开个人博客是个很好的选择。之前已经看了几部影片，开博客后看了《岁月神偷》，我会慢慢的写一些留下深刻印象的电影。</p>\n<h2 id=\"岁月是个“小偷”\"><a href=\"#岁月是个“小偷”\" class=\"headerlink\" title=\"岁月是个“小偷”\"></a>岁月是个“小偷”</h2><p>起初看到《岁月神偷》这个名字，我以为如同《致青春》等片一样讲的是对过去青春，没想到其实讲的是生命。罗进一本该灿烂辉煌的生命就这么被岁月偷走了。</p>\n","encrypt":true},{"title":"【观影记录】少年派的奇幻漂流","date":"2022-04-23T07:57:20.000Z","comment":true,"_content":"\n\n\n\n\n\n\n\n\n\n\n\n\n占位\n","source":"_posts/【观影记录】少年派的奇幻漂流.md","raw":"---\ntitle: 【观影记录】少年派的奇幻漂流\ndate: 2022-04-23 15:57:20\ntags: [电影,施工中]\ncategory: 观影记录\ncomment: true\n---\n\n\n\n\n\n\n\n\n\n\n\n\n\n占位\n","slug":"【观影记录】少年派的奇幻漂流","published":1,"updated":"2022-04-28T09:20:29.822Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2isrz1000079gv81rt0cma2","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"抱歉, 这个密码不太对, 请再试试.\" data-whm=\"欢迎.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"47573d8f282bb18a60cfcc4514336981142886a1bf7dba13df3ef89479979ba5\">22064b17c03cb0c0e58c99349b6889d0663b9d2182b581a44fe7f2e7f05bd4456006948297dd4537dc744dc5b697e9b1</script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">请输入密码.</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"excerpt":"这篇文章被加密了，需要输入密码查看哦。","more":"这篇文章被加密了，需要输入密码查看哦。","origin":"<p>占位</p>\n","encrypt":true},{"title":"【观影记录】肖申克的救赎","date":"2022-04-18T07:58:06.000Z","comment":true,"_content":"\n占位\n","source":"_posts/【观影记录】肖申克的救赎.md","raw":"---\ntitle: 【观影记录】肖申克的救赎\ndate: 2022-04-18 15:58:06\ntags: [电影,施工中]\ncategory: 观影记录\ncomment: true\n---\n\n占位\n","slug":"【观影记录】肖申克的救赎","published":1,"updated":"2022-04-28T09:19:44.672Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2isrz1100089gv8csoe9n8d","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"抱歉, 这个密码不太对, 请再试试.\" data-whm=\"欢迎.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"47573d8f282bb18a60cfcc4514336981142886a1bf7dba13df3ef89479979ba5\">22064b17c03cb0c0e58c99349b6889d0663b9d2182b581a44fe7f2e7f05bd4456006948297dd4537dc744dc5b697e9b1</script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">请输入密码.</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"excerpt":"这篇文章被加密了，需要输入密码查看哦。","more":"这篇文章被加密了，需要输入密码查看哦。","origin":"<p>占位</p>\n","encrypt":true},{"title":"【观影记录】阿甘正传","date":"2022-04-21T07:57:55.000Z","comment":true,"_content":"\n占位\n","source":"_posts/【观影记录】阿甘正传.md","raw":"---\ntitle: 【观影记录】阿甘正传\ndate: 2022-04-21 15:57:55\ntags: [电影,施工中]\ncategory: 观影记录\ncomment: true\n---\n\n占位\n","slug":"【观影记录】阿甘正传","published":1,"updated":"2022-04-28T09:21:05.481Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2isrz13000c9gv8ecgjarj1","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"抱歉, 这个密码不太对, 请再试试.\" data-whm=\"欢迎.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"47573d8f282bb18a60cfcc4514336981142886a1bf7dba13df3ef89479979ba5\">22064b17c03cb0c0e58c99349b6889d0663b9d2182b581a44fe7f2e7f05bd4456006948297dd4537dc744dc5b697e9b1</script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">请输入密码.</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"excerpt":"这篇文章被加密了，需要输入密码查看哦。","more":"这篇文章被加密了，需要输入密码查看哦。","origin":"<p>占位</p>\n","encrypt":true},{"title":"我的第一篇博客","date":"2022-04-27T05:09:12.000Z","updated":"2022-04-27T16:33:00.000Z","comment":true,"sticky":999,"_content":"\n本篇文章主要介绍hexo博客\n\n## 常用网址\n\n### 博客相关\n\n* hexo官网：https://hexo.io/zh-cn/\n* keep主题官网：https://keep-docs.xpoet.cn/\n* picx图片官网：https://picx.xpoet.cn/#/upload\n\n## 博客部署与文章更新\n\n**github相关仓库**\n\n本博客部署在 https://github.com/liuSheng0/liuSheng0.github.io\n\n- 分支main：用于存放github page\n- 分支hexo：用于存放hexo源码，防止丢失\n\n评论gitalk服务器部署在 https://github.com/liuSheng0/gitalk-save\n\n图床部署在 https://github.com/liuSheng0/image-hosting\n\n**新建文章时执行如下命令**\n\n```\n$ hexo new [layout] <title>\n```\n\n**布局（layout）**\n\nHexo 有三种默认布局：`post`、`page` 和 `draft`。在创建这三种不同类型的文件时，它们将会被保存到不同的路径；而您自定义的其他布局和 `post` 相同，都将储存到 `source/_posts` 文件夹。\n\n| 布局    | 路径             |\n| :------ | :--------------- |\n| `post`  | `source/_posts`  |\n| `page`  | `source`         |\n| `draft` | `source/_drafts` |\n\n**部署文章时执行如下命令**\n\n```\n/* 在localhost:4000本地浏览修改 */\n$ hexo s\n\n/* 用于执行，清空、刷新、部署，更新main页面 */\n$ hexo clean && hexo g && hexo d\n```\n\n**若网站架构有更新，建议使用如下命令将源码存入github仓库的hexo分支**\n\n```\n/* 以下命令为提交源码到hexo仓库 */\n$ git add .\n$ git commit -m \"更新\"\n$ git checkout hexo\n$ git push origin hexo\n```\n\n## 常用博客功能\n\n### 文章加密\n\n基于“ hexo-blog-encrypt”扩展实现\n\n* 对文章信息头使用如下关键字\n\n```\npassword: xxx #设置密码为xxx\nsbstract: aaa #设置锁定时主页描述为aaa\nmessage: bbb #设置锁定时文章信息为bbb\nwrong_pass_message: ccc #设置密码输入错误时信息ccc\nwrong_hash_message: ddd #设置密码输入正确时信息ddd\n```\n\n* 或者使用“加密”tag加密文章\n\n### 设置标签和分类\n\n```\ntag: [tag1,tag2,tag3] #设置文章标签为tag1，tag2，tag3\ncategories: cat #设置文章分类为cat\n```\n\n### 置顶文章\n\n文章默认以时间顺序排列，使用sticky属性来置顶文章\n\n```\nsticky: 999 #值越大文章越靠前\n```\n\n","source":"_posts/我的第一篇博客.md","raw":"---\ntitle: 我的第一篇博客\ndate: 2022-04-27 13:09:12\nupdated: 2022-04-28 00:33:00\ncomment: true\nsticky: 999\ncategory: 编程教程\ntags: [hexo,博客]\n---\n\n本篇文章主要介绍hexo博客\n\n## 常用网址\n\n### 博客相关\n\n* hexo官网：https://hexo.io/zh-cn/\n* keep主题官网：https://keep-docs.xpoet.cn/\n* picx图片官网：https://picx.xpoet.cn/#/upload\n\n## 博客部署与文章更新\n\n**github相关仓库**\n\n本博客部署在 https://github.com/liuSheng0/liuSheng0.github.io\n\n- 分支main：用于存放github page\n- 分支hexo：用于存放hexo源码，防止丢失\n\n评论gitalk服务器部署在 https://github.com/liuSheng0/gitalk-save\n\n图床部署在 https://github.com/liuSheng0/image-hosting\n\n**新建文章时执行如下命令**\n\n```\n$ hexo new [layout] <title>\n```\n\n**布局（layout）**\n\nHexo 有三种默认布局：`post`、`page` 和 `draft`。在创建这三种不同类型的文件时，它们将会被保存到不同的路径；而您自定义的其他布局和 `post` 相同，都将储存到 `source/_posts` 文件夹。\n\n| 布局    | 路径             |\n| :------ | :--------------- |\n| `post`  | `source/_posts`  |\n| `page`  | `source`         |\n| `draft` | `source/_drafts` |\n\n**部署文章时执行如下命令**\n\n```\n/* 在localhost:4000本地浏览修改 */\n$ hexo s\n\n/* 用于执行，清空、刷新、部署，更新main页面 */\n$ hexo clean && hexo g && hexo d\n```\n\n**若网站架构有更新，建议使用如下命令将源码存入github仓库的hexo分支**\n\n```\n/* 以下命令为提交源码到hexo仓库 */\n$ git add .\n$ git commit -m \"更新\"\n$ git checkout hexo\n$ git push origin hexo\n```\n\n## 常用博客功能\n\n### 文章加密\n\n基于“ hexo-blog-encrypt”扩展实现\n\n* 对文章信息头使用如下关键字\n\n```\npassword: xxx #设置密码为xxx\nsbstract: aaa #设置锁定时主页描述为aaa\nmessage: bbb #设置锁定时文章信息为bbb\nwrong_pass_message: ccc #设置密码输入错误时信息ccc\nwrong_hash_message: ddd #设置密码输入正确时信息ddd\n```\n\n* 或者使用“加密”tag加密文章\n\n### 设置标签和分类\n\n```\ntag: [tag1,tag2,tag3] #设置文章标签为tag1，tag2，tag3\ncategories: cat #设置文章分类为cat\n```\n\n### 置顶文章\n\n文章默认以时间顺序排列，使用sticky属性来置顶文章\n\n```\nsticky: 999 #值越大文章越靠前\n```\n\n","slug":"我的第一篇博客","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cl2isrz15000d9gv82iqp9p5f","content":"<p>本篇文章主要介绍hexo博客</p>\n<h2 id=\"常用网址\"><a href=\"#常用网址\" class=\"headerlink\" title=\"常用网址\"></a>常用网址</h2><h3 id=\"博客相关\"><a href=\"#博客相关\" class=\"headerlink\" title=\"博客相关\"></a>博客相关</h3><ul>\n<li>hexo官网：<a class=\"link\"   href=\"https://hexo.io/zh-cn/\" >https://hexo.io/zh-cn/<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li>keep主题官网：<a class=\"link\"   href=\"https://keep-docs.xpoet.cn/\" >https://keep-docs.xpoet.cn/<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li>picx图片官网：<a class=\"link\"   href=\"https://picx.xpoet.cn/#/upload\" >https://picx.xpoet.cn/#/upload<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ul>\n<h2 id=\"博客部署与文章更新\"><a href=\"#博客部署与文章更新\" class=\"headerlink\" title=\"博客部署与文章更新\"></a>博客部署与文章更新</h2><p><strong>github相关仓库</strong></p>\n<p>本博客部署在 <a class=\"link\"   href=\"https://github.com/liuSheng0/liuSheng0.github.io\" >https://github.com/liuSheng0/liuSheng0.github.io<i class=\"fas fa-external-link-alt\"></i></a></p>\n<ul>\n<li>分支main：用于存放github page</li>\n<li>分支hexo：用于存放hexo源码，防止丢失</li>\n</ul>\n<p>评论gitalk服务器部署在 <a class=\"link\"   href=\"https://github.com/liuSheng0/gitalk-save\" >https://github.com/liuSheng0/gitalk-save<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>图床部署在 <a class=\"link\"   href=\"https://github.com/liuSheng0/image-hosting\" >https://github.com/liuSheng0/image-hosting<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><strong>新建文章时执行如下命令</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n\n<p><strong>布局（layout）</strong></p>\n<p>Hexo 有三种默认布局：<code>post</code>、<code>page</code> 和 <code>draft</code>。在创建这三种不同类型的文件时，它们将会被保存到不同的路径；而您自定义的其他布局和 <code>post</code> 相同，都将储存到 <code>source/_posts</code> 文件夹。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">布局</th>\n<th align=\"left\">路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>post</code></td>\n<td align=\"left\"><code>source/_posts</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>page</code></td>\n<td align=\"left\"><code>source</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>draft</code></td>\n<td align=\"left\"><code>source/_drafts</code></td>\n</tr>\n</tbody></table>\n<p><strong>部署文章时执行如下命令</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* 在localhost:4000本地浏览修改 */</span><br><span class=\"line\">$ hexo s</span><br><span class=\"line\"></span><br><span class=\"line\">/* 用于执行，清空、刷新、部署，更新main页面 */</span><br><span class=\"line\">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>\n\n<p><strong>若网站架构有更新，建议使用如下命令将源码存入github仓库的hexo分支</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* 以下命令为提交源码到hexo仓库 */</span><br><span class=\"line\">$ git add .</span><br><span class=\"line\">$ git commit -m &quot;更新&quot;</span><br><span class=\"line\">$ git checkout hexo</span><br><span class=\"line\">$ git push origin hexo</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"常用博客功能\"><a href=\"#常用博客功能\" class=\"headerlink\" title=\"常用博客功能\"></a>常用博客功能</h2><h3 id=\"文章加密\"><a href=\"#文章加密\" class=\"headerlink\" title=\"文章加密\"></a>文章加密</h3><p>基于“ hexo-blog-encrypt”扩展实现</p>\n<ul>\n<li>对文章信息头使用如下关键字</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">password: xxx #设置密码为xxx</span><br><span class=\"line\">sbstract: aaa #设置锁定时主页描述为aaa</span><br><span class=\"line\">message: bbb #设置锁定时文章信息为bbb</span><br><span class=\"line\">wrong_pass_message: ccc #设置密码输入错误时信息ccc</span><br><span class=\"line\">wrong_hash_message: ddd #设置密码输入正确时信息ddd</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>或者使用“加密”tag加密文章</li>\n</ul>\n<h3 id=\"设置标签和分类\"><a href=\"#设置标签和分类\" class=\"headerlink\" title=\"设置标签和分类\"></a>设置标签和分类</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tag: [tag1,tag2,tag3] #设置文章标签为tag1，tag2，tag3</span><br><span class=\"line\">categories: cat #设置文章分类为cat</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"置顶文章\"><a href=\"#置顶文章\" class=\"headerlink\" title=\"置顶文章\"></a>置顶文章</h3><p>文章默认以时间顺序排列，使用sticky属性来置顶文章</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sticky: 999 #值越大文章越靠前</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>本篇文章主要介绍hexo博客</p>\n<h2 id=\"常用网址\"><a href=\"#常用网址\" class=\"headerlink\" title=\"常用网址\"></a>常用网址</h2><h3 id=\"博客相关\"><a href=\"#博客相关\" class=\"headerlink\" title=\"博客相关\"></a>博客相关</h3><ul>\n<li>hexo官网：<a class=\"link\"   href=\"https://hexo.io/zh-cn/\" >https://hexo.io/zh-cn/<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li>keep主题官网：<a class=\"link\"   href=\"https://keep-docs.xpoet.cn/\" >https://keep-docs.xpoet.cn/<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li>picx图片官网：<a class=\"link\"   href=\"https://picx.xpoet.cn/#/upload\" >https://picx.xpoet.cn/#/upload<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ul>\n<h2 id=\"博客部署与文章更新\"><a href=\"#博客部署与文章更新\" class=\"headerlink\" title=\"博客部署与文章更新\"></a>博客部署与文章更新</h2><p><strong>github相关仓库</strong></p>\n<p>本博客部署在 <a class=\"link\"   href=\"https://github.com/liuSheng0/liuSheng0.github.io\" >https://github.com/liuSheng0/liuSheng0.github.io<i class=\"fas fa-external-link-alt\"></i></a></p>\n<ul>\n<li>分支main：用于存放github page</li>\n<li>分支hexo：用于存放hexo源码，防止丢失</li>\n</ul>\n<p>评论gitalk服务器部署在 <a class=\"link\"   href=\"https://github.com/liuSheng0/gitalk-save\" >https://github.com/liuSheng0/gitalk-save<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>图床部署在 <a class=\"link\"   href=\"https://github.com/liuSheng0/image-hosting\" >https://github.com/liuSheng0/image-hosting<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><strong>新建文章时执行如下命令</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n\n<p><strong>布局（layout）</strong></p>\n<p>Hexo 有三种默认布局：<code>post</code>、<code>page</code> 和 <code>draft</code>。在创建这三种不同类型的文件时，它们将会被保存到不同的路径；而您自定义的其他布局和 <code>post</code> 相同，都将储存到 <code>source/_posts</code> 文件夹。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">布局</th>\n<th align=\"left\">路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>post</code></td>\n<td align=\"left\"><code>source/_posts</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>page</code></td>\n<td align=\"left\"><code>source</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>draft</code></td>\n<td align=\"left\"><code>source/_drafts</code></td>\n</tr>\n</tbody></table>\n<p><strong>部署文章时执行如下命令</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* 在localhost:4000本地浏览修改 */</span><br><span class=\"line\">$ hexo s</span><br><span class=\"line\"></span><br><span class=\"line\">/* 用于执行，清空、刷新、部署，更新main页面 */</span><br><span class=\"line\">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>\n\n<p><strong>若网站架构有更新，建议使用如下命令将源码存入github仓库的hexo分支</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* 以下命令为提交源码到hexo仓库 */</span><br><span class=\"line\">$ git add .</span><br><span class=\"line\">$ git commit -m &quot;更新&quot;</span><br><span class=\"line\">$ git checkout hexo</span><br><span class=\"line\">$ git push origin hexo</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"常用博客功能\"><a href=\"#常用博客功能\" class=\"headerlink\" title=\"常用博客功能\"></a>常用博客功能</h2><h3 id=\"文章加密\"><a href=\"#文章加密\" class=\"headerlink\" title=\"文章加密\"></a>文章加密</h3><p>基于“ hexo-blog-encrypt”扩展实现</p>\n<ul>\n<li>对文章信息头使用如下关键字</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">password: xxx #设置密码为xxx</span><br><span class=\"line\">sbstract: aaa #设置锁定时主页描述为aaa</span><br><span class=\"line\">message: bbb #设置锁定时文章信息为bbb</span><br><span class=\"line\">wrong_pass_message: ccc #设置密码输入错误时信息ccc</span><br><span class=\"line\">wrong_hash_message: ddd #设置密码输入正确时信息ddd</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>或者使用“加密”tag加密文章</li>\n</ul>\n<h3 id=\"设置标签和分类\"><a href=\"#设置标签和分类\" class=\"headerlink\" title=\"设置标签和分类\"></a>设置标签和分类</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tag: [tag1,tag2,tag3] #设置文章标签为tag1，tag2，tag3</span><br><span class=\"line\">categories: cat #设置文章分类为cat</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"置顶文章\"><a href=\"#置顶文章\" class=\"headerlink\" title=\"置顶文章\"></a>置顶文章</h3><p>文章默认以时间顺序排列，使用sticky属性来置顶文章</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sticky: 999 #值越大文章越靠前</span><br></pre></td></tr></table></figure>\n\n"},{"title":"【观影记录】霸王别姬","date":"2022-04-19T07:57:44.000Z","comment":true,"_content":"\n\n\n\n\n占位\n","source":"_posts/【观影记录】霸王别姬.md","raw":"---\ntitle: 【观影记录】霸王别姬\ndate: 2022-04-19 15:57:44\ntags: [电影,施工中]\ncategory: 观影记录\ncomment: true\n---\n\n\n\n\n\n占位\n","slug":"【观影记录】霸王别姬","published":1,"updated":"2022-04-28T09:20:52.065Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2isrz18000h9gv85w1tg34g","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"抱歉, 这个密码不太对, 请再试试.\" data-whm=\"欢迎.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"47573d8f282bb18a60cfcc4514336981142886a1bf7dba13df3ef89479979ba5\">22064b17c03cb0c0e58c99349b6889d0663b9d2182b581a44fe7f2e7f05bd4456006948297dd4537dc744dc5b697e9b1</script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">请输入密码.</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"excerpt":"这篇文章被加密了，需要输入密码查看哦。","more":"这篇文章被加密了，需要输入密码查看哦。","origin":"<p>占位</p>\n","encrypt":true},{"title":"有趣的图片","date":"2022-04-27T16:38:20.000Z","comment":true,"_content":"\n\n\n分享日常生活中一些有趣的图片\n\n![塞尔达传说](https://raw.githubusercontent.com/liuSheng0/image-hosting/main/blog-image/65472.4sbchoywjyi0.webp)\n\n  \n\n![pvz](https://raw.githubusercontent.com/liuSheng0/image-hosting/main/blog-image/pvz.4xauhjcscia0.webp)\n\n  \n\n![yummy](https://raw.githubusercontent.com/liuSheng0/image-hosting/main/blog-image/yummy.6km1ea3bgnk0.webp)\n\n  \n\n![mc](https://raw.githubusercontent.com/liuSheng0/image-hosting/main/blog-image/mc.5lhgrelfm500.webp)\n\n  \n\n![genshin](https://raw.githubusercontent.com/liuSheng0/image-hosting/main/blog-image/gimpact.5pzc96bzei00.webp)\n","source":"_posts/有趣的图片.md","raw":"---\ntitle: 有趣的图片\ndate: 2022-04-28 00:38:20\ntags: [疫情中的2022]\ncategories: 日常分享\ncomment: true\n---\n\n\n\n分享日常生活中一些有趣的图片\n\n![塞尔达传说](https://raw.githubusercontent.com/liuSheng0/image-hosting/main/blog-image/65472.4sbchoywjyi0.webp)\n\n  \n\n![pvz](https://raw.githubusercontent.com/liuSheng0/image-hosting/main/blog-image/pvz.4xauhjcscia0.webp)\n\n  \n\n![yummy](https://raw.githubusercontent.com/liuSheng0/image-hosting/main/blog-image/yummy.6km1ea3bgnk0.webp)\n\n  \n\n![mc](https://raw.githubusercontent.com/liuSheng0/image-hosting/main/blog-image/mc.5lhgrelfm500.webp)\n\n  \n\n![genshin](https://raw.githubusercontent.com/liuSheng0/image-hosting/main/blog-image/gimpact.5pzc96bzei00.webp)\n","slug":"有趣的图片","published":1,"updated":"2022-04-27T16:52:47.936Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2isrz1o001e9gv84c9jdaq1","content":"<p>分享日常生活中一些有趣的图片</p>\n<p><img src=\"https://raw.githubusercontent.com/liuSheng0/image-hosting/main/blog-image/65472.4sbchoywjyi0.webp\" alt=\"塞尔达传说\"></p>\n<p><img src=\"https://raw.githubusercontent.com/liuSheng0/image-hosting/main/blog-image/pvz.4xauhjcscia0.webp\" alt=\"pvz\"></p>\n<p><img src=\"https://raw.githubusercontent.com/liuSheng0/image-hosting/main/blog-image/yummy.6km1ea3bgnk0.webp\" alt=\"yummy\"></p>\n<p><img src=\"https://raw.githubusercontent.com/liuSheng0/image-hosting/main/blog-image/mc.5lhgrelfm500.webp\" alt=\"mc\"></p>\n<p><img src=\"https://raw.githubusercontent.com/liuSheng0/image-hosting/main/blog-image/gimpact.5pzc96bzei00.webp\" alt=\"genshin\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>分享日常生活中一些有趣的图片</p>\n<p><img src=\"https://raw.githubusercontent.com/liuSheng0/image-hosting/main/blog-image/65472.4sbchoywjyi0.webp\" alt=\"塞尔达传说\"></p>\n<p><img src=\"https://raw.githubusercontent.com/liuSheng0/image-hosting/main/blog-image/pvz.4xauhjcscia0.webp\" alt=\"pvz\"></p>\n<p><img src=\"https://raw.githubusercontent.com/liuSheng0/image-hosting/main/blog-image/yummy.6km1ea3bgnk0.webp\" alt=\"yummy\"></p>\n<p><img src=\"https://raw.githubusercontent.com/liuSheng0/image-hosting/main/blog-image/mc.5lhgrelfm500.webp\" alt=\"mc\"></p>\n<p><img src=\"https://raw.githubusercontent.com/liuSheng0/image-hosting/main/blog-image/gimpact.5pzc96bzei00.webp\" alt=\"genshin\"></p>\n"},{"title":"腾讯pcg客户端面经","date":"2022-04-27T12:16:30.000Z","comment":true,"_content":"\n\n\n去年考研一战失败，被腾讯pcg喊去面试，投的腾讯pcg客户端方向，二面的时候我问面试官客户端主要工作，他告诉他是后端面试官...然后就这么凉了，二面的内容我也不太记得了，大家凑活看一下吧。\n\n## 一面\n\n1 代码题，给出一个数字，计算他拆为两个质数相加的组数。如n=10 res=2（[2,7],[5,5]）\n\n2 网络分层结构（应用层->传输层->网络层->数据链路层->物理层）\n\n3 http和https的区别，http在哪一层\n\n4 tcp在哪一层，三次握手，为什么要三次握手\n\n5 常用的STL数据结构（我答的vector）->vector数组的本质（动态数组）->vector数组如何实现动态分配的\n\n6 设计一个移动客户端，使得在用户关闭客户端后还可以接收到服务器发送的通知（TCP长连接/应用层实现UDP长链接）\n\n7 聊一聊自己的项目\n\n8 指出了简历中的一个项目聊了一下\n\n9 说一说平时都是怎么学习知识的\n\n10 说一说自己和身边的同学比有哪些优势\n\n\n\n---\n\n下面是网上的其他面经\n\n## 腾讯pcg客户端面经\n\n作者：菜鸟要飞啊\n\n链接：https://www.nowcoder.com/discuss/396510?type=2\n\n来源：牛客网\n\n### 一面\n\n解释一下虚函数内部实现原理？ \n\n虚表（编译时建立，运行时覆盖）\n\n\n\n一个模板类在不同特化之后，得到的类还是不是同一个类？\n\n是\n\n\n\n解释一下什么叫偏特化？\n\nhttps://blog.csdn.net/songchuwang1868/article/details/88918175\n\n\n\nmalloc/free和new/delete的区别？\n\n区别1：类型\n\nmalloc/free是函数，而new/delete是关键字、操作符\n\n区别2：作用\n\nmalloc/free只是简单的进行内存的申请和释放；new/delete除了进行内存申请和释放，还会调用对象的构造函数和析构函数进行空间的初始化和清理\n\n区别3：参数与返回值\n\nmalloc/free需要手动计算申请内存的空间大小，而且返回值是void*，需要自己转换成所需要的类型\n\nnew/delete可以自己计算类型的大小，返回为对应的类型指针\n\n区别4：内存占用\n\nmalloc/free占用自由存储区，new/delete占用堆存储区\n\n \n\n如果一个类的析构函数是虚函数，那么一般是用来干嘛的？\n\n基类\n\n \n\n说一下C++中const的几种用法？\n\nconst在谁后面谁就不可变。const在最前面就往后挪一个判断\n\n \n\nconst常量与define宏定义的区别？\n\nconst本质是变量，但是不可修改\n\ndefine本质就是字符串替换\n\n \n\nmap的底层数据结构是什么？\n\n红黑树和平衡二叉树\n\n \n\n红黑树和平衡二叉树的区别？\n\n红黑树不追求完全平衡，有些时候性能更好\n\n \n\n哈希表的实现方法？如何解决哈希冲突？\n\n\n\n用C++做的后台多还是客户端多？\n\n说一下TCP和UDP的区别？\n\n1.基于连接与无连接；\n\n2.对系统资源的要求（TCP较多，UDP少）；\n\n3.UDP程序结构较简单；\n\n4.流模式与数据报模式\n\n5.TCP保证数据正确性，UDP可能丢包，TCP保证数据顺序，UDP不保证。\n\n \n\nTCP为什么是三次握手而四次挥手？\n\n三次握手保障在被链接方\n\n \n\nHTTPS加密机制？\n\n证书->key\n\n \n\n什么叫死锁？死锁产生的条件？\n\n多个进程在运行过程中因争夺资源\n\n1 互斥条件\n\n2 请求保持\n\n3 不剥夺\n\n4 循环等待\n\n\n\n进程间通信有哪些方法？\n\n管道（有名无名）\n\nSocket套接字\n\n信号和信号量\n\n消息队列\n\n共享内存\n\n\n\n管道pipe：管道是一种半双工的通信方式，数据只能单向流动，而且只能在具有亲缘关系的进程间使用。进程的亲缘关系通常是指父子进程关系。\n\n命名管道FIFO：有名管道也是半双工的通信方式，但是它允许无亲缘关系进程间的通信。\n\n消息队列MessageQueue：消息队列是由消息的链表，存放在内核中并由消息队列标识符标识。消息队列克服了信号传递信息少、管道只能承载无格式字节流以及缓冲区大小受限等缺点。\n\n共享存储SharedMemory：共享内存就是映射一段能被其他进程所访问的内存，这段共享内存由一个进程创建，但多个进程都可以访问。共享内存是最快的 IPC 方式，它是针对其他进程间通信方式运行效率低而专门设计的。它往往与其他通信机制，如信号量，配合使用，来实现进程间的同步和通信。\n\n信号量Semaphore：信号量是一个计数器，可以用来控制多个进程对共享资源的访问。它常作为一种锁机制，防止某进程正在访问共享资源时，其他进程也访问该资源。因此，主要作为进程间以及同一进程内不同线程之间的同步手段。\n\n套接字Socket：套解口也是一种进程间通信机制，与其他通信机制不同的是，它可用于不同及其间的进程通信。\n\n信号 ( sinal ) ： 信号是一种比较复杂的通信方式，用于通知接收进程某个事件已经发生。\n\n\n\nsocket创建出来后，默认是什么模式？\n\n阻塞模式\n\n\n\n用户态和内核态的区别？\n\n内核态与用户态是操作系统的两种运行级别，当程序运行在3级特权级上时，就可以称之为运行在用户态。因为这是最低特权级，是普通的用户进程运行的特权级，大部分用户直接面对的程序都是运行在用户态；\n\n当程序运行在0级特权级上时，就可以称之为运行在内核态。\n\n运行在用户态下的程序不能直接访问操作系统内核数据结构和程序。当我们在系统中执行一个程序时，大部分时间是运行在用户态下的，在其需要操作系统帮助完成某些它没有权力和能力完成的工作时就会切换到内核态（比如操作硬件）。\n\n\n\n这两种状态的主要差别是\n\n处于用户态执行时，进程所能访问的内存空间和对象受到限制，其所处于占有的处理器是可被抢占的\n\n处于内核态执行时，则能访问所有的内存空间和对象，且所占有的处理器是不允许被抢占的。\n\n\n\n算法题--寻找一个无序数组的中位数\n\n快排\n\n最小堆\n\n \n\n算法题--在二叉树中寻找任意两个结点的最近公共结点\n\n深度优先\n\n \n\n设计一个LRU的缓存？\n\nLRU最近最久未使用\n\n1 数组+时间戳\n\n2 链表+hashmap+更新头部舍弃尾部\n\n\n\n讲一下云台项目的运行机制？\n\n---\n\n### 二面\n\n毕业后工作的地方倾向于哪里？\n\n说一下哈希表？\n\n数组，散列函数\n\n \n\n如果有哈希冲突的话如何处理？\n\n1 开放定址法:按照一定规则向其它地址探测,直到遇到空桶.比如线性探测,假如现在的索引是3,3有值就向4探测,如果还有就继续向下,还比如平方探测.就是1 2 3 ...的平方进行探测.\n\n2:再哈希法,设计多个哈希函数\n\n3:链地址法,HashMap就是这样操作的\n\n \n\n什么是平衡二叉树？当有节点发生变化的时候它会怎么样？\n\n高度相差小于2，做平衡\n\n\n\nmap和set底层的数据结构？\n\n红黑树\n\n\n\n红黑树的查找效率是怎样的？解释一下为什么是这样？\n\nlogn平均，最大2logn\n\n\n\nvector中erase()和remove()的区别？\n\n \n\n \n\n介绍一下TCP的滑动窗口？\n\n连续传输一组数据不用等待ack。快速重传。\n\n \n\nHTTPS为什么比较安全？\n\n证书，加密\n\n \n\n为什么可以用公钥加密，用私钥解密呢？背后的技术原理？\n\nRSA算法 大素数\n\n \n\n用户态和核心态？内核态一般可以做什么？有没有做过内核态的调试？\n\n进程管理\n\n \n\n有没有做过内存泄漏的追查？怎么做？\n\nValgrind: Debugging and profiling Linux programs, aiming at programs written in C and C++\n\nccmalloc: Linux和Solaris下对C和C++程序的简单的使用内存泄漏和malloc调试库\n\nLeakTracer: Linux、Solaris和HP-UX下跟踪和分析C++程序中的内存泄漏\n\nElectric Fence: Linux分发版中由Bruce Perens编写的malloc()调试库\n\nLeaky: Linux下检测内存泄漏的程序\n\nDmalloc: Debug Malloc Library\n\nMEMWATCH: 由Johan Lindh编写，是一个开放源代码C语言内存错误检测工具，主要是通过gcc的precessor来进行\n\nKCachegrind: A visualization tool for the profiling data generated by Cachegrind and Calltree\n\n \n\nTCP断开连接是几次挥手？为什么？\n\n4次\n\n \n\n有什么问题吗？\n\n可以实习多久？\n\n---\n\n## 腾讯CSIG\n\n### 一面\n\n1.自我介绍\n\n2.项目优化\n\n3.线程池和多线程编程\n\n4.内存泄漏\n\n5.垃圾回收算法\n\n6.http和https，加密过程\n\n7.TCP三次握手和四次挥手\n\n8.TCP的time_wait\n\n9.生产者消费者，使用什么数据结构存储资源\n\n10.翻转链表（没写出来，我想找个班上了）\n\n11.对于转客户端有什么学习的计划\n\n12.实习时间和时长\n\n---\n\n## 腾讯PCG客户端\n\n作者：牛客815852018号\n\nhttps://www.nowcoder.com/discuss/630418?channel=-1&source_id=community_index_nctrack\n\n来源：牛客网\n\n \n\n一面视频面试（1h30min）：\n\n挑一个简历里的项目介绍\n\n问了问开发环境\n\n \n\nSTL Array List区别\n\nnew, malloc区别\n\n汇编语言/C++内存结构 函数A call 函数B过程\n\n虚函数\n\n虚函数怎么运作的（虚函数表）\n\n空类包含什么函数\n\n对象的copy函数怎么运作的\n\n线程进程区别\n\n线程进程交流\n\nTCP/UDP 区别\n\nC++11特性\n\n智能指针介绍\n\n各种树的特点，底层实现\n\n死锁/例子\n\n快排思想及时间复杂度\n\n \n\n算法：\n\n一个无序数组找中位数\n\n \n\n写代码：\n\nLeetcode 415\n\n拓展问了一下这道题如果换成减法是怎么实现的\n\n\n\n大部分概念题都答出来了，写代码的题有两个笔误一直没发现是提醒后修改的。面完官网就变复试\n\n---\n\n## 二面\n\n电话面试（40min）：\n\n自我介绍\n\n项目简介\n\n \n\n进程之间如何交流，各有什么优缺点\n\n介绍一下各种搜索树\n\n平衡二叉树旋转\n\n数据库引索用的是什么树\n\n数据库索引怎么实现，高效么\n\nmd5算法介绍，怎么实现\n\nstrcpy安全隐患，有什么好的替代\n\n本地客户端使用html源码安全隐患\n\nHTTPS加密具体过程\n\nTCP/UDP 发出一个大包有什么区别\n\n哈希冲突 （要求说出三种方案）\n\n开放定址\n\n再哈希法\n\n哈希链表\n\n\n\n算法：\n\n一个无序数组找中位数 （没错就是和一面一样的问题，但我用了一面的回答面试官直接要求让我想一个复杂度更低的orz）\n\n## 腾讯pcg\n\n作者：徐201903212006771\n\n链接：https://www.nowcoder.com/discuss/436432?channel=-1&source_id=discuss_terminal_discuss_sim_nctrack\n\n来源：牛客网\n\n \n\n### 一面\n\n时间：2020.05.22     面试时长：1h\n\n\n\n1.自我介绍\n\n\n\n2.笔试题1：删除无序链表中的重复结点（能否优化）\n\n例：输入3 -> 2 -> 4 -> 3 -> 5 输出3 -> 2 -> 4 -> 5\n\n解释：3结点重复，将第二个’3’结点删除（这边的重复指的是结点的值重复）\n\n\n\n3.笔试题2：先说一下二叉树的有哪些遍历方法。写一个二叉树前序遍历的非递归形式。\n\n\n\n4.讲一下Java的内存。\n\n\n\n5.创建一个字符串对象，这个对象分配在哪里？\n\n\n\n6.String str = “123” + “456”;会创建几个对象。\n\n\n\n7.问了操作系统的问题，没学过，所以也忘了问了什么。\n\n\n\n8.数据存储有学过吗？数据库和文件保存有什么区别？\n\n\n\n9.Activity有哪些启动模式？\n\n显式启动\n\n隐式启动\n\n直接通过包名启动apk\n\n\n\n10.有什么要问的？\n\n---\n\n### 二面\n\n时间：2020.05.23     面试时长：1h\n\n \n\n1.上一轮面试做了哪2到面试题？\n\n \n\n2.会哪些编程语言？\n\n \n\n3.想做哪个方向？为什么？Android\n\n \n\n4.对Android比较感兴趣，都学了些什么？我答了活动的启动模式、Handler。\n\n \n\n5.ListView源代码有看过吗？没看过。\n\n \n\n6.想一下ListView应该是怎么实现的？链表？\n\n \n\n\\7. ListView滑动页面如何实现页面的复用？队列？后来经过面试官的引导，有了思路。一开始往下滑，为了不影响用户体验，下面的数据，需要先预加载，这样往下滑的时候，就可以快速地显示内容。如果往下滑了之后，又想要往上滑，采用移出页面的内容，就把相应的数据销毁掉，等需要再显示的时候重新加载，比较费时；可以在一开始往下滑的时候，移出页面的内容，将相应的UI数据（不是实际的内容数据，这个一直在存储空间中）压到一个栈里面，等要往回滑的时候，再出栈，恢复数据，这样就比较快。因此在做滑动页面的操作的时候，需要上下预留出一定量的项的数据，超过这个量，再把这些数据释放掉，具体需要留多少，一个是跟页面能显示多少有关，可以通过大量测试，看看多少比较合适。还跟用户的使用习惯有关，动态调节，可以引入机器学习的方法。\n\n \n\n8.给你2个线程，如何产生死锁？为什么会产生死锁？\n\n \n\n9.外存有一定量的数据，需要读取到内存中处理，但是内存的大小是不知道的，要求如何能够读取尽量少的次数，才能处理完全部的数据？\n\n核心是试探内存的大小，假如要处理100M、数据\n\n思路一：先用一个较小的数，比如1M的数据，看看内存能不能存得下，可以的话，2M，可以，4M，……如此指数增长地尝试，希望能找出一个比较大地和内存容量比较接近的值。假如得到了内存的大概大小，然后每次就以这个数来读取外存的数据，读取次数应该会比较少。\n\n思路二：和思路一类似，不同的是一开始选的数偏大，比如5M，然后每次按固定值增长，即线性增长。后面的操作就类似了。\n\n思路三：从大往小试探，先看50M能不能存得下，不行25M，可以37M，每次处理37M，3次就够了。\n\n\n\n假如内存分成了50M、25M、10M、5M，如何找到第65M内存？\n\n \n\n\\10.  实习想要达到什么样的期望？基础能力得提升，想能独立做出几个App。\n\n\n\n\\11.  如何达到你得期望？基础要扎实，看安卓源代码，在实际场景中做练习。想要在多少时间达到这样一个目标？实习完，能独立开发几个应用；正式入职，深入了解安卓，新发布的技术也要及时了，工作个1-2年，看看能不能当个小组leader。\n\n在这方面花更多精力，学新知识，不断解决问题、总结，遇到问题向同事请教，成长更快。\n\n\n\n\\12.  有看过Github得源码吗？\n\n\n\n\\13.  提问环节：问了面试官是做什么方向的？做了很多方向。\n\n\n\n\\14.  还问了Kotlin在公司的普及度，现在是否有必要学习？现在主要还是以Java为主，少数也在做，毕竟Java沉淀了这么多年。所以还是Java方面先学好。\n\n\n\n\\15.  自己选方向，还是分配方向？比较想做安卓。都做了哪些努力？看书、看博客。\n\n\n\n\\16.  周围有同学投腾讯的吗？有做客户端、前端的吗？\n","source":"_posts/腾讯pcg客户端面经.md","raw":"---\ntitle: 腾讯pcg客户端面经\ndate: 2022-04-27 20:16:30\ntags: [面试,客户端,开发]\ncategories: 面试经验\ncomment: true\n---\n\n\n\n去年考研一战失败，被腾讯pcg喊去面试，投的腾讯pcg客户端方向，二面的时候我问面试官客户端主要工作，他告诉他是后端面试官...然后就这么凉了，二面的内容我也不太记得了，大家凑活看一下吧。\n\n## 一面\n\n1 代码题，给出一个数字，计算他拆为两个质数相加的组数。如n=10 res=2（[2,7],[5,5]）\n\n2 网络分层结构（应用层->传输层->网络层->数据链路层->物理层）\n\n3 http和https的区别，http在哪一层\n\n4 tcp在哪一层，三次握手，为什么要三次握手\n\n5 常用的STL数据结构（我答的vector）->vector数组的本质（动态数组）->vector数组如何实现动态分配的\n\n6 设计一个移动客户端，使得在用户关闭客户端后还可以接收到服务器发送的通知（TCP长连接/应用层实现UDP长链接）\n\n7 聊一聊自己的项目\n\n8 指出了简历中的一个项目聊了一下\n\n9 说一说平时都是怎么学习知识的\n\n10 说一说自己和身边的同学比有哪些优势\n\n\n\n---\n\n下面是网上的其他面经\n\n## 腾讯pcg客户端面经\n\n作者：菜鸟要飞啊\n\n链接：https://www.nowcoder.com/discuss/396510?type=2\n\n来源：牛客网\n\n### 一面\n\n解释一下虚函数内部实现原理？ \n\n虚表（编译时建立，运行时覆盖）\n\n\n\n一个模板类在不同特化之后，得到的类还是不是同一个类？\n\n是\n\n\n\n解释一下什么叫偏特化？\n\nhttps://blog.csdn.net/songchuwang1868/article/details/88918175\n\n\n\nmalloc/free和new/delete的区别？\n\n区别1：类型\n\nmalloc/free是函数，而new/delete是关键字、操作符\n\n区别2：作用\n\nmalloc/free只是简单的进行内存的申请和释放；new/delete除了进行内存申请和释放，还会调用对象的构造函数和析构函数进行空间的初始化和清理\n\n区别3：参数与返回值\n\nmalloc/free需要手动计算申请内存的空间大小，而且返回值是void*，需要自己转换成所需要的类型\n\nnew/delete可以自己计算类型的大小，返回为对应的类型指针\n\n区别4：内存占用\n\nmalloc/free占用自由存储区，new/delete占用堆存储区\n\n \n\n如果一个类的析构函数是虚函数，那么一般是用来干嘛的？\n\n基类\n\n \n\n说一下C++中const的几种用法？\n\nconst在谁后面谁就不可变。const在最前面就往后挪一个判断\n\n \n\nconst常量与define宏定义的区别？\n\nconst本质是变量，但是不可修改\n\ndefine本质就是字符串替换\n\n \n\nmap的底层数据结构是什么？\n\n红黑树和平衡二叉树\n\n \n\n红黑树和平衡二叉树的区别？\n\n红黑树不追求完全平衡，有些时候性能更好\n\n \n\n哈希表的实现方法？如何解决哈希冲突？\n\n\n\n用C++做的后台多还是客户端多？\n\n说一下TCP和UDP的区别？\n\n1.基于连接与无连接；\n\n2.对系统资源的要求（TCP较多，UDP少）；\n\n3.UDP程序结构较简单；\n\n4.流模式与数据报模式\n\n5.TCP保证数据正确性，UDP可能丢包，TCP保证数据顺序，UDP不保证。\n\n \n\nTCP为什么是三次握手而四次挥手？\n\n三次握手保障在被链接方\n\n \n\nHTTPS加密机制？\n\n证书->key\n\n \n\n什么叫死锁？死锁产生的条件？\n\n多个进程在运行过程中因争夺资源\n\n1 互斥条件\n\n2 请求保持\n\n3 不剥夺\n\n4 循环等待\n\n\n\n进程间通信有哪些方法？\n\n管道（有名无名）\n\nSocket套接字\n\n信号和信号量\n\n消息队列\n\n共享内存\n\n\n\n管道pipe：管道是一种半双工的通信方式，数据只能单向流动，而且只能在具有亲缘关系的进程间使用。进程的亲缘关系通常是指父子进程关系。\n\n命名管道FIFO：有名管道也是半双工的通信方式，但是它允许无亲缘关系进程间的通信。\n\n消息队列MessageQueue：消息队列是由消息的链表，存放在内核中并由消息队列标识符标识。消息队列克服了信号传递信息少、管道只能承载无格式字节流以及缓冲区大小受限等缺点。\n\n共享存储SharedMemory：共享内存就是映射一段能被其他进程所访问的内存，这段共享内存由一个进程创建，但多个进程都可以访问。共享内存是最快的 IPC 方式，它是针对其他进程间通信方式运行效率低而专门设计的。它往往与其他通信机制，如信号量，配合使用，来实现进程间的同步和通信。\n\n信号量Semaphore：信号量是一个计数器，可以用来控制多个进程对共享资源的访问。它常作为一种锁机制，防止某进程正在访问共享资源时，其他进程也访问该资源。因此，主要作为进程间以及同一进程内不同线程之间的同步手段。\n\n套接字Socket：套解口也是一种进程间通信机制，与其他通信机制不同的是，它可用于不同及其间的进程通信。\n\n信号 ( sinal ) ： 信号是一种比较复杂的通信方式，用于通知接收进程某个事件已经发生。\n\n\n\nsocket创建出来后，默认是什么模式？\n\n阻塞模式\n\n\n\n用户态和内核态的区别？\n\n内核态与用户态是操作系统的两种运行级别，当程序运行在3级特权级上时，就可以称之为运行在用户态。因为这是最低特权级，是普通的用户进程运行的特权级，大部分用户直接面对的程序都是运行在用户态；\n\n当程序运行在0级特权级上时，就可以称之为运行在内核态。\n\n运行在用户态下的程序不能直接访问操作系统内核数据结构和程序。当我们在系统中执行一个程序时，大部分时间是运行在用户态下的，在其需要操作系统帮助完成某些它没有权力和能力完成的工作时就会切换到内核态（比如操作硬件）。\n\n\n\n这两种状态的主要差别是\n\n处于用户态执行时，进程所能访问的内存空间和对象受到限制，其所处于占有的处理器是可被抢占的\n\n处于内核态执行时，则能访问所有的内存空间和对象，且所占有的处理器是不允许被抢占的。\n\n\n\n算法题--寻找一个无序数组的中位数\n\n快排\n\n最小堆\n\n \n\n算法题--在二叉树中寻找任意两个结点的最近公共结点\n\n深度优先\n\n \n\n设计一个LRU的缓存？\n\nLRU最近最久未使用\n\n1 数组+时间戳\n\n2 链表+hashmap+更新头部舍弃尾部\n\n\n\n讲一下云台项目的运行机制？\n\n---\n\n### 二面\n\n毕业后工作的地方倾向于哪里？\n\n说一下哈希表？\n\n数组，散列函数\n\n \n\n如果有哈希冲突的话如何处理？\n\n1 开放定址法:按照一定规则向其它地址探测,直到遇到空桶.比如线性探测,假如现在的索引是3,3有值就向4探测,如果还有就继续向下,还比如平方探测.就是1 2 3 ...的平方进行探测.\n\n2:再哈希法,设计多个哈希函数\n\n3:链地址法,HashMap就是这样操作的\n\n \n\n什么是平衡二叉树？当有节点发生变化的时候它会怎么样？\n\n高度相差小于2，做平衡\n\n\n\nmap和set底层的数据结构？\n\n红黑树\n\n\n\n红黑树的查找效率是怎样的？解释一下为什么是这样？\n\nlogn平均，最大2logn\n\n\n\nvector中erase()和remove()的区别？\n\n \n\n \n\n介绍一下TCP的滑动窗口？\n\n连续传输一组数据不用等待ack。快速重传。\n\n \n\nHTTPS为什么比较安全？\n\n证书，加密\n\n \n\n为什么可以用公钥加密，用私钥解密呢？背后的技术原理？\n\nRSA算法 大素数\n\n \n\n用户态和核心态？内核态一般可以做什么？有没有做过内核态的调试？\n\n进程管理\n\n \n\n有没有做过内存泄漏的追查？怎么做？\n\nValgrind: Debugging and profiling Linux programs, aiming at programs written in C and C++\n\nccmalloc: Linux和Solaris下对C和C++程序的简单的使用内存泄漏和malloc调试库\n\nLeakTracer: Linux、Solaris和HP-UX下跟踪和分析C++程序中的内存泄漏\n\nElectric Fence: Linux分发版中由Bruce Perens编写的malloc()调试库\n\nLeaky: Linux下检测内存泄漏的程序\n\nDmalloc: Debug Malloc Library\n\nMEMWATCH: 由Johan Lindh编写，是一个开放源代码C语言内存错误检测工具，主要是通过gcc的precessor来进行\n\nKCachegrind: A visualization tool for the profiling data generated by Cachegrind and Calltree\n\n \n\nTCP断开连接是几次挥手？为什么？\n\n4次\n\n \n\n有什么问题吗？\n\n可以实习多久？\n\n---\n\n## 腾讯CSIG\n\n### 一面\n\n1.自我介绍\n\n2.项目优化\n\n3.线程池和多线程编程\n\n4.内存泄漏\n\n5.垃圾回收算法\n\n6.http和https，加密过程\n\n7.TCP三次握手和四次挥手\n\n8.TCP的time_wait\n\n9.生产者消费者，使用什么数据结构存储资源\n\n10.翻转链表（没写出来，我想找个班上了）\n\n11.对于转客户端有什么学习的计划\n\n12.实习时间和时长\n\n---\n\n## 腾讯PCG客户端\n\n作者：牛客815852018号\n\nhttps://www.nowcoder.com/discuss/630418?channel=-1&source_id=community_index_nctrack\n\n来源：牛客网\n\n \n\n一面视频面试（1h30min）：\n\n挑一个简历里的项目介绍\n\n问了问开发环境\n\n \n\nSTL Array List区别\n\nnew, malloc区别\n\n汇编语言/C++内存结构 函数A call 函数B过程\n\n虚函数\n\n虚函数怎么运作的（虚函数表）\n\n空类包含什么函数\n\n对象的copy函数怎么运作的\n\n线程进程区别\n\n线程进程交流\n\nTCP/UDP 区别\n\nC++11特性\n\n智能指针介绍\n\n各种树的特点，底层实现\n\n死锁/例子\n\n快排思想及时间复杂度\n\n \n\n算法：\n\n一个无序数组找中位数\n\n \n\n写代码：\n\nLeetcode 415\n\n拓展问了一下这道题如果换成减法是怎么实现的\n\n\n\n大部分概念题都答出来了，写代码的题有两个笔误一直没发现是提醒后修改的。面完官网就变复试\n\n---\n\n## 二面\n\n电话面试（40min）：\n\n自我介绍\n\n项目简介\n\n \n\n进程之间如何交流，各有什么优缺点\n\n介绍一下各种搜索树\n\n平衡二叉树旋转\n\n数据库引索用的是什么树\n\n数据库索引怎么实现，高效么\n\nmd5算法介绍，怎么实现\n\nstrcpy安全隐患，有什么好的替代\n\n本地客户端使用html源码安全隐患\n\nHTTPS加密具体过程\n\nTCP/UDP 发出一个大包有什么区别\n\n哈希冲突 （要求说出三种方案）\n\n开放定址\n\n再哈希法\n\n哈希链表\n\n\n\n算法：\n\n一个无序数组找中位数 （没错就是和一面一样的问题，但我用了一面的回答面试官直接要求让我想一个复杂度更低的orz）\n\n## 腾讯pcg\n\n作者：徐201903212006771\n\n链接：https://www.nowcoder.com/discuss/436432?channel=-1&source_id=discuss_terminal_discuss_sim_nctrack\n\n来源：牛客网\n\n \n\n### 一面\n\n时间：2020.05.22     面试时长：1h\n\n\n\n1.自我介绍\n\n\n\n2.笔试题1：删除无序链表中的重复结点（能否优化）\n\n例：输入3 -> 2 -> 4 -> 3 -> 5 输出3 -> 2 -> 4 -> 5\n\n解释：3结点重复，将第二个’3’结点删除（这边的重复指的是结点的值重复）\n\n\n\n3.笔试题2：先说一下二叉树的有哪些遍历方法。写一个二叉树前序遍历的非递归形式。\n\n\n\n4.讲一下Java的内存。\n\n\n\n5.创建一个字符串对象，这个对象分配在哪里？\n\n\n\n6.String str = “123” + “456”;会创建几个对象。\n\n\n\n7.问了操作系统的问题，没学过，所以也忘了问了什么。\n\n\n\n8.数据存储有学过吗？数据库和文件保存有什么区别？\n\n\n\n9.Activity有哪些启动模式？\n\n显式启动\n\n隐式启动\n\n直接通过包名启动apk\n\n\n\n10.有什么要问的？\n\n---\n\n### 二面\n\n时间：2020.05.23     面试时长：1h\n\n \n\n1.上一轮面试做了哪2到面试题？\n\n \n\n2.会哪些编程语言？\n\n \n\n3.想做哪个方向？为什么？Android\n\n \n\n4.对Android比较感兴趣，都学了些什么？我答了活动的启动模式、Handler。\n\n \n\n5.ListView源代码有看过吗？没看过。\n\n \n\n6.想一下ListView应该是怎么实现的？链表？\n\n \n\n\\7. ListView滑动页面如何实现页面的复用？队列？后来经过面试官的引导，有了思路。一开始往下滑，为了不影响用户体验，下面的数据，需要先预加载，这样往下滑的时候，就可以快速地显示内容。如果往下滑了之后，又想要往上滑，采用移出页面的内容，就把相应的数据销毁掉，等需要再显示的时候重新加载，比较费时；可以在一开始往下滑的时候，移出页面的内容，将相应的UI数据（不是实际的内容数据，这个一直在存储空间中）压到一个栈里面，等要往回滑的时候，再出栈，恢复数据，这样就比较快。因此在做滑动页面的操作的时候，需要上下预留出一定量的项的数据，超过这个量，再把这些数据释放掉，具体需要留多少，一个是跟页面能显示多少有关，可以通过大量测试，看看多少比较合适。还跟用户的使用习惯有关，动态调节，可以引入机器学习的方法。\n\n \n\n8.给你2个线程，如何产生死锁？为什么会产生死锁？\n\n \n\n9.外存有一定量的数据，需要读取到内存中处理，但是内存的大小是不知道的，要求如何能够读取尽量少的次数，才能处理完全部的数据？\n\n核心是试探内存的大小，假如要处理100M、数据\n\n思路一：先用一个较小的数，比如1M的数据，看看内存能不能存得下，可以的话，2M，可以，4M，……如此指数增长地尝试，希望能找出一个比较大地和内存容量比较接近的值。假如得到了内存的大概大小，然后每次就以这个数来读取外存的数据，读取次数应该会比较少。\n\n思路二：和思路一类似，不同的是一开始选的数偏大，比如5M，然后每次按固定值增长，即线性增长。后面的操作就类似了。\n\n思路三：从大往小试探，先看50M能不能存得下，不行25M，可以37M，每次处理37M，3次就够了。\n\n\n\n假如内存分成了50M、25M、10M、5M，如何找到第65M内存？\n\n \n\n\\10.  实习想要达到什么样的期望？基础能力得提升，想能独立做出几个App。\n\n\n\n\\11.  如何达到你得期望？基础要扎实，看安卓源代码，在实际场景中做练习。想要在多少时间达到这样一个目标？实习完，能独立开发几个应用；正式入职，深入了解安卓，新发布的技术也要及时了，工作个1-2年，看看能不能当个小组leader。\n\n在这方面花更多精力，学新知识，不断解决问题、总结，遇到问题向同事请教，成长更快。\n\n\n\n\\12.  有看过Github得源码吗？\n\n\n\n\\13.  提问环节：问了面试官是做什么方向的？做了很多方向。\n\n\n\n\\14.  还问了Kotlin在公司的普及度，现在是否有必要学习？现在主要还是以Java为主，少数也在做，毕竟Java沉淀了这么多年。所以还是Java方面先学好。\n\n\n\n\\15.  自己选方向，还是分配方向？比较想做安卓。都做了哪些努力？看书、看博客。\n\n\n\n\\16.  周围有同学投腾讯的吗？有做客户端、前端的吗？\n","slug":"腾讯pcg客户端面经","published":1,"updated":"2022-04-27T15:52:51.658Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2isrz1p001f9gv80e92box2","content":"<p>去年考研一战失败，被腾讯pcg喊去面试，投的腾讯pcg客户端方向，二面的时候我问面试官客户端主要工作，他告诉他是后端面试官…然后就这么凉了，二面的内容我也不太记得了，大家凑活看一下吧。</p>\n<h2 id=\"一面\"><a href=\"#一面\" class=\"headerlink\" title=\"一面\"></a>一面</h2><p>1 代码题，给出一个数字，计算他拆为两个质数相加的组数。如n=10 res=2（[2,7],[5,5]）</p>\n<p>2 网络分层结构（应用层-&gt;传输层-&gt;网络层-&gt;数据链路层-&gt;物理层）</p>\n<p>3 http和https的区别，http在哪一层</p>\n<p>4 tcp在哪一层，三次握手，为什么要三次握手</p>\n<p>5 常用的STL数据结构（我答的vector）-&gt;vector数组的本质（动态数组）-&gt;vector数组如何实现动态分配的</p>\n<p>6 设计一个移动客户端，使得在用户关闭客户端后还可以接收到服务器发送的通知（TCP长连接/应用层实现UDP长链接）</p>\n<p>7 聊一聊自己的项目</p>\n<p>8 指出了简历中的一个项目聊了一下</p>\n<p>9 说一说平时都是怎么学习知识的</p>\n<p>10 说一说自己和身边的同学比有哪些优势</p>\n<hr>\n<p>下面是网上的其他面经</p>\n<h2 id=\"腾讯pcg客户端面经\"><a href=\"#腾讯pcg客户端面经\" class=\"headerlink\" title=\"腾讯pcg客户端面经\"></a>腾讯pcg客户端面经</h2><p>作者：菜鸟要飞啊</p>\n<p>链接：<a class=\"link\"   href=\"https://www.nowcoder.com/discuss/396510?type=2\" >https://www.nowcoder.com/discuss/396510?type=2<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>来源：牛客网</p>\n<h3 id=\"一面-1\"><a href=\"#一面-1\" class=\"headerlink\" title=\"一面\"></a>一面</h3><p>解释一下虚函数内部实现原理？ </p>\n<p>虚表（编译时建立，运行时覆盖）</p>\n<p>一个模板类在不同特化之后，得到的类还是不是同一个类？</p>\n<p>是</p>\n<p>解释一下什么叫偏特化？</p>\n<p><a class=\"link\"   href=\"https://blog.csdn.net/songchuwang1868/article/details/88918175\" >https://blog.csdn.net/songchuwang1868/article/details/88918175<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>malloc/free和new/delete的区别？</p>\n<p>区别1：类型</p>\n<p>malloc/free是函数，而new/delete是关键字、操作符</p>\n<p>区别2：作用</p>\n<p>malloc/free只是简单的进行内存的申请和释放；new/delete除了进行内存申请和释放，还会调用对象的构造函数和析构函数进行空间的初始化和清理</p>\n<p>区别3：参数与返回值</p>\n<p>malloc/free需要手动计算申请内存的空间大小，而且返回值是void*，需要自己转换成所需要的类型</p>\n<p>new/delete可以自己计算类型的大小，返回为对应的类型指针</p>\n<p>区别4：内存占用</p>\n<p>malloc/free占用自由存储区，new/delete占用堆存储区</p>\n<p>如果一个类的析构函数是虚函数，那么一般是用来干嘛的？</p>\n<p>基类</p>\n<p>说一下C++中const的几种用法？</p>\n<p>const在谁后面谁就不可变。const在最前面就往后挪一个判断</p>\n<p>const常量与define宏定义的区别？</p>\n<p>const本质是变量，但是不可修改</p>\n<p>define本质就是字符串替换</p>\n<p>map的底层数据结构是什么？</p>\n<p>红黑树和平衡二叉树</p>\n<p>红黑树和平衡二叉树的区别？</p>\n<p>红黑树不追求完全平衡，有些时候性能更好</p>\n<p>哈希表的实现方法？如何解决哈希冲突？</p>\n<p>用C++做的后台多还是客户端多？</p>\n<p>说一下TCP和UDP的区别？</p>\n<p>1.基于连接与无连接；</p>\n<p>2.对系统资源的要求（TCP较多，UDP少）；</p>\n<p>3.UDP程序结构较简单；</p>\n<p>4.流模式与数据报模式</p>\n<p>5.TCP保证数据正确性，UDP可能丢包，TCP保证数据顺序，UDP不保证。</p>\n<p>TCP为什么是三次握手而四次挥手？</p>\n<p>三次握手保障在被链接方</p>\n<p>HTTPS加密机制？</p>\n<p>证书-&gt;key</p>\n<p>什么叫死锁？死锁产生的条件？</p>\n<p>多个进程在运行过程中因争夺资源</p>\n<p>1 互斥条件</p>\n<p>2 请求保持</p>\n<p>3 不剥夺</p>\n<p>4 循环等待</p>\n<p>进程间通信有哪些方法？</p>\n<p>管道（有名无名）</p>\n<p>Socket套接字</p>\n<p>信号和信号量</p>\n<p>消息队列</p>\n<p>共享内存</p>\n<p>管道pipe：管道是一种半双工的通信方式，数据只能单向流动，而且只能在具有亲缘关系的进程间使用。进程的亲缘关系通常是指父子进程关系。</p>\n<p>命名管道FIFO：有名管道也是半双工的通信方式，但是它允许无亲缘关系进程间的通信。</p>\n<p>消息队列MessageQueue：消息队列是由消息的链表，存放在内核中并由消息队列标识符标识。消息队列克服了信号传递信息少、管道只能承载无格式字节流以及缓冲区大小受限等缺点。</p>\n<p>共享存储SharedMemory：共享内存就是映射一段能被其他进程所访问的内存，这段共享内存由一个进程创建，但多个进程都可以访问。共享内存是最快的 IPC 方式，它是针对其他进程间通信方式运行效率低而专门设计的。它往往与其他通信机制，如信号量，配合使用，来实现进程间的同步和通信。</p>\n<p>信号量Semaphore：信号量是一个计数器，可以用来控制多个进程对共享资源的访问。它常作为一种锁机制，防止某进程正在访问共享资源时，其他进程也访问该资源。因此，主要作为进程间以及同一进程内不同线程之间的同步手段。</p>\n<p>套接字Socket：套解口也是一种进程间通信机制，与其他通信机制不同的是，它可用于不同及其间的进程通信。</p>\n<p>信号 ( sinal ) ： 信号是一种比较复杂的通信方式，用于通知接收进程某个事件已经发生。</p>\n<p>socket创建出来后，默认是什么模式？</p>\n<p>阻塞模式</p>\n<p>用户态和内核态的区别？</p>\n<p>内核态与用户态是操作系统的两种运行级别，当程序运行在3级特权级上时，就可以称之为运行在用户态。因为这是最低特权级，是普通的用户进程运行的特权级，大部分用户直接面对的程序都是运行在用户态；</p>\n<p>当程序运行在0级特权级上时，就可以称之为运行在内核态。</p>\n<p>运行在用户态下的程序不能直接访问操作系统内核数据结构和程序。当我们在系统中执行一个程序时，大部分时间是运行在用户态下的，在其需要操作系统帮助完成某些它没有权力和能力完成的工作时就会切换到内核态（比如操作硬件）。</p>\n<p>这两种状态的主要差别是</p>\n<p>处于用户态执行时，进程所能访问的内存空间和对象受到限制，其所处于占有的处理器是可被抢占的</p>\n<p>处于内核态执行时，则能访问所有的内存空间和对象，且所占有的处理器是不允许被抢占的。</p>\n<p>算法题–寻找一个无序数组的中位数</p>\n<p>快排</p>\n<p>最小堆</p>\n<p>算法题–在二叉树中寻找任意两个结点的最近公共结点</p>\n<p>深度优先</p>\n<p>设计一个LRU的缓存？</p>\n<p>LRU最近最久未使用</p>\n<p>1 数组+时间戳</p>\n<p>2 链表+hashmap+更新头部舍弃尾部</p>\n<p>讲一下云台项目的运行机制？</p>\n<hr>\n<h3 id=\"二面\"><a href=\"#二面\" class=\"headerlink\" title=\"二面\"></a>二面</h3><p>毕业后工作的地方倾向于哪里？</p>\n<p>说一下哈希表？</p>\n<p>数组，散列函数</p>\n<p>如果有哈希冲突的话如何处理？</p>\n<p>1 开放定址法:按照一定规则向其它地址探测,直到遇到空桶.比如线性探测,假如现在的索引是3,3有值就向4探测,如果还有就继续向下,还比如平方探测.就是1 2 3 …的平方进行探测.</p>\n<p>2:再哈希法,设计多个哈希函数</p>\n<p>3:链地址法,HashMap就是这样操作的</p>\n<p>什么是平衡二叉树？当有节点发生变化的时候它会怎么样？</p>\n<p>高度相差小于2，做平衡</p>\n<p>map和set底层的数据结构？</p>\n<p>红黑树</p>\n<p>红黑树的查找效率是怎样的？解释一下为什么是这样？</p>\n<p>logn平均，最大2logn</p>\n<p>vector中erase()和remove()的区别？</p>\n<p>介绍一下TCP的滑动窗口？</p>\n<p>连续传输一组数据不用等待ack。快速重传。</p>\n<p>HTTPS为什么比较安全？</p>\n<p>证书，加密</p>\n<p>为什么可以用公钥加密，用私钥解密呢？背后的技术原理？</p>\n<p>RSA算法 大素数</p>\n<p>用户态和核心态？内核态一般可以做什么？有没有做过内核态的调试？</p>\n<p>进程管理</p>\n<p>有没有做过内存泄漏的追查？怎么做？</p>\n<p>Valgrind: Debugging and profiling Linux programs, aiming at programs written in C and C++</p>\n<p>ccmalloc: Linux和Solaris下对C和C++程序的简单的使用内存泄漏和malloc调试库</p>\n<p>LeakTracer: Linux、Solaris和HP-UX下跟踪和分析C++程序中的内存泄漏</p>\n<p>Electric Fence: Linux分发版中由Bruce Perens编写的malloc()调试库</p>\n<p>Leaky: Linux下检测内存泄漏的程序</p>\n<p>Dmalloc: Debug Malloc Library</p>\n<p>MEMWATCH: 由Johan Lindh编写，是一个开放源代码C语言内存错误检测工具，主要是通过gcc的precessor来进行</p>\n<p>KCachegrind: A visualization tool for the profiling data generated by Cachegrind and Calltree</p>\n<p>TCP断开连接是几次挥手？为什么？</p>\n<p>4次</p>\n<p>有什么问题吗？</p>\n<p>可以实习多久？</p>\n<hr>\n<h2 id=\"腾讯CSIG\"><a href=\"#腾讯CSIG\" class=\"headerlink\" title=\"腾讯CSIG\"></a>腾讯CSIG</h2><h3 id=\"一面-2\"><a href=\"#一面-2\" class=\"headerlink\" title=\"一面\"></a>一面</h3><p>1.自我介绍</p>\n<p>2.项目优化</p>\n<p>3.线程池和多线程编程</p>\n<p>4.内存泄漏</p>\n<p>5.垃圾回收算法</p>\n<p>6.http和https，加密过程</p>\n<p>7.TCP三次握手和四次挥手</p>\n<p>8.TCP的time_wait</p>\n<p>9.生产者消费者，使用什么数据结构存储资源</p>\n<p>10.翻转链表（没写出来，我想找个班上了）</p>\n<p>11.对于转客户端有什么学习的计划</p>\n<p>12.实习时间和时长</p>\n<hr>\n<h2 id=\"腾讯PCG客户端\"><a href=\"#腾讯PCG客户端\" class=\"headerlink\" title=\"腾讯PCG客户端\"></a>腾讯PCG客户端</h2><p>作者：牛客815852018号</p>\n<p><a class=\"link\"   href=\"https://www.nowcoder.com/discuss/630418?channel=-1&amp;source_id=community_index_nctrack\" >https://www.nowcoder.com/discuss/630418?channel=-1&amp;source_id=community_index_nctrack<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>来源：牛客网</p>\n<p>一面视频面试（1h30min）：</p>\n<p>挑一个简历里的项目介绍</p>\n<p>问了问开发环境</p>\n<p>STL Array List区别</p>\n<p>new, malloc区别</p>\n<p>汇编语言/C++内存结构 函数A call 函数B过程</p>\n<p>虚函数</p>\n<p>虚函数怎么运作的（虚函数表）</p>\n<p>空类包含什么函数</p>\n<p>对象的copy函数怎么运作的</p>\n<p>线程进程区别</p>\n<p>线程进程交流</p>\n<p>TCP/UDP 区别</p>\n<p>C++11特性</p>\n<p>智能指针介绍</p>\n<p>各种树的特点，底层实现</p>\n<p>死锁/例子</p>\n<p>快排思想及时间复杂度</p>\n<p>算法：</p>\n<p>一个无序数组找中位数</p>\n<p>写代码：</p>\n<p>Leetcode 415</p>\n<p>拓展问了一下这道题如果换成减法是怎么实现的</p>\n<p>大部分概念题都答出来了，写代码的题有两个笔误一直没发现是提醒后修改的。面完官网就变复试</p>\n<hr>\n<h2 id=\"二面-1\"><a href=\"#二面-1\" class=\"headerlink\" title=\"二面\"></a>二面</h2><p>电话面试（40min）：</p>\n<p>自我介绍</p>\n<p>项目简介</p>\n<p>进程之间如何交流，各有什么优缺点</p>\n<p>介绍一下各种搜索树</p>\n<p>平衡二叉树旋转</p>\n<p>数据库引索用的是什么树</p>\n<p>数据库索引怎么实现，高效么</p>\n<p>md5算法介绍，怎么实现</p>\n<p>strcpy安全隐患，有什么好的替代</p>\n<p>本地客户端使用html源码安全隐患</p>\n<p>HTTPS加密具体过程</p>\n<p>TCP/UDP 发出一个大包有什么区别</p>\n<p>哈希冲突 （要求说出三种方案）</p>\n<p>开放定址</p>\n<p>再哈希法</p>\n<p>哈希链表</p>\n<p>算法：</p>\n<p>一个无序数组找中位数 （没错就是和一面一样的问题，但我用了一面的回答面试官直接要求让我想一个复杂度更低的orz）</p>\n<h2 id=\"腾讯pcg\"><a href=\"#腾讯pcg\" class=\"headerlink\" title=\"腾讯pcg\"></a>腾讯pcg</h2><p>作者：徐201903212006771</p>\n<p>链接：<a class=\"link\"   href=\"https://www.nowcoder.com/discuss/436432?channel=-1&amp;source_id=discuss_terminal_discuss_sim_nctrack\" >https://www.nowcoder.com/discuss/436432?channel=-1&amp;source_id=discuss_terminal_discuss_sim_nctrack<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>来源：牛客网</p>\n<h3 id=\"一面-3\"><a href=\"#一面-3\" class=\"headerlink\" title=\"一面\"></a>一面</h3><p>时间：2020.05.22     面试时长：1h</p>\n<p>1.自我介绍</p>\n<p>2.笔试题1：删除无序链表中的重复结点（能否优化）</p>\n<p>例：输入3 -&gt; 2 -&gt; 4 -&gt; 3 -&gt; 5 输出3 -&gt; 2 -&gt; 4 -&gt; 5</p>\n<p>解释：3结点重复，将第二个’3’结点删除（这边的重复指的是结点的值重复）</p>\n<p>3.笔试题2：先说一下二叉树的有哪些遍历方法。写一个二叉树前序遍历的非递归形式。</p>\n<p>4.讲一下Java的内存。</p>\n<p>5.创建一个字符串对象，这个对象分配在哪里？</p>\n<p>6.String str = “123” + “456”;会创建几个对象。</p>\n<p>7.问了操作系统的问题，没学过，所以也忘了问了什么。</p>\n<p>8.数据存储有学过吗？数据库和文件保存有什么区别？</p>\n<p>9.Activity有哪些启动模式？</p>\n<p>显式启动</p>\n<p>隐式启动</p>\n<p>直接通过包名启动apk</p>\n<p>10.有什么要问的？</p>\n<hr>\n<h3 id=\"二面-2\"><a href=\"#二面-2\" class=\"headerlink\" title=\"二面\"></a>二面</h3><p>时间：2020.05.23     面试时长：1h</p>\n<p>1.上一轮面试做了哪2到面试题？</p>\n<p>2.会哪些编程语言？</p>\n<p>3.想做哪个方向？为什么？Android</p>\n<p>4.对Android比较感兴趣，都学了些什么？我答了活动的启动模式、Handler。</p>\n<p>5.ListView源代码有看过吗？没看过。</p>\n<p>6.想一下ListView应该是怎么实现的？链表？</p>\n<p>\\7. ListView滑动页面如何实现页面的复用？队列？后来经过面试官的引导，有了思路。一开始往下滑，为了不影响用户体验，下面的数据，需要先预加载，这样往下滑的时候，就可以快速地显示内容。如果往下滑了之后，又想要往上滑，采用移出页面的内容，就把相应的数据销毁掉，等需要再显示的时候重新加载，比较费时；可以在一开始往下滑的时候，移出页面的内容，将相应的UI数据（不是实际的内容数据，这个一直在存储空间中）压到一个栈里面，等要往回滑的时候，再出栈，恢复数据，这样就比较快。因此在做滑动页面的操作的时候，需要上下预留出一定量的项的数据，超过这个量，再把这些数据释放掉，具体需要留多少，一个是跟页面能显示多少有关，可以通过大量测试，看看多少比较合适。还跟用户的使用习惯有关，动态调节，可以引入机器学习的方法。</p>\n<p>8.给你2个线程，如何产生死锁？为什么会产生死锁？</p>\n<p>9.外存有一定量的数据，需要读取到内存中处理，但是内存的大小是不知道的，要求如何能够读取尽量少的次数，才能处理完全部的数据？</p>\n<p>核心是试探内存的大小，假如要处理100M、数据</p>\n<p>思路一：先用一个较小的数，比如1M的数据，看看内存能不能存得下，可以的话，2M，可以，4M，……如此指数增长地尝试，希望能找出一个比较大地和内存容量比较接近的值。假如得到了内存的大概大小，然后每次就以这个数来读取外存的数据，读取次数应该会比较少。</p>\n<p>思路二：和思路一类似，不同的是一开始选的数偏大，比如5M，然后每次按固定值增长，即线性增长。后面的操作就类似了。</p>\n<p>思路三：从大往小试探，先看50M能不能存得下，不行25M，可以37M，每次处理37M，3次就够了。</p>\n<p>假如内存分成了50M、25M、10M、5M，如何找到第65M内存？</p>\n<p>\\10.  实习想要达到什么样的期望？基础能力得提升，想能独立做出几个App。</p>\n<p>\\11.  如何达到你得期望？基础要扎实，看安卓源代码，在实际场景中做练习。想要在多少时间达到这样一个目标？实习完，能独立开发几个应用；正式入职，深入了解安卓，新发布的技术也要及时了，工作个1-2年，看看能不能当个小组leader。</p>\n<p>在这方面花更多精力，学新知识，不断解决问题、总结，遇到问题向同事请教，成长更快。</p>\n<p>\\12.  有看过Github得源码吗？</p>\n<p>\\13.  提问环节：问了面试官是做什么方向的？做了很多方向。</p>\n<p>\\14.  还问了Kotlin在公司的普及度，现在是否有必要学习？现在主要还是以Java为主，少数也在做，毕竟Java沉淀了这么多年。所以还是Java方面先学好。</p>\n<p>\\15.  自己选方向，还是分配方向？比较想做安卓。都做了哪些努力？看书、看博客。</p>\n<p>\\16.  周围有同学投腾讯的吗？有做客户端、前端的吗？</p>\n","site":{"data":{}},"excerpt":"","more":"<p>去年考研一战失败，被腾讯pcg喊去面试，投的腾讯pcg客户端方向，二面的时候我问面试官客户端主要工作，他告诉他是后端面试官…然后就这么凉了，二面的内容我也不太记得了，大家凑活看一下吧。</p>\n<h2 id=\"一面\"><a href=\"#一面\" class=\"headerlink\" title=\"一面\"></a>一面</h2><p>1 代码题，给出一个数字，计算他拆为两个质数相加的组数。如n=10 res=2（[2,7],[5,5]）</p>\n<p>2 网络分层结构（应用层-&gt;传输层-&gt;网络层-&gt;数据链路层-&gt;物理层）</p>\n<p>3 http和https的区别，http在哪一层</p>\n<p>4 tcp在哪一层，三次握手，为什么要三次握手</p>\n<p>5 常用的STL数据结构（我答的vector）-&gt;vector数组的本质（动态数组）-&gt;vector数组如何实现动态分配的</p>\n<p>6 设计一个移动客户端，使得在用户关闭客户端后还可以接收到服务器发送的通知（TCP长连接/应用层实现UDP长链接）</p>\n<p>7 聊一聊自己的项目</p>\n<p>8 指出了简历中的一个项目聊了一下</p>\n<p>9 说一说平时都是怎么学习知识的</p>\n<p>10 说一说自己和身边的同学比有哪些优势</p>\n<hr>\n<p>下面是网上的其他面经</p>\n<h2 id=\"腾讯pcg客户端面经\"><a href=\"#腾讯pcg客户端面经\" class=\"headerlink\" title=\"腾讯pcg客户端面经\"></a>腾讯pcg客户端面经</h2><p>作者：菜鸟要飞啊</p>\n<p>链接：<a class=\"link\"   href=\"https://www.nowcoder.com/discuss/396510?type=2\" >https://www.nowcoder.com/discuss/396510?type=2<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>来源：牛客网</p>\n<h3 id=\"一面-1\"><a href=\"#一面-1\" class=\"headerlink\" title=\"一面\"></a>一面</h3><p>解释一下虚函数内部实现原理？ </p>\n<p>虚表（编译时建立，运行时覆盖）</p>\n<p>一个模板类在不同特化之后，得到的类还是不是同一个类？</p>\n<p>是</p>\n<p>解释一下什么叫偏特化？</p>\n<p><a class=\"link\"   href=\"https://blog.csdn.net/songchuwang1868/article/details/88918175\" >https://blog.csdn.net/songchuwang1868/article/details/88918175<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>malloc/free和new/delete的区别？</p>\n<p>区别1：类型</p>\n<p>malloc/free是函数，而new/delete是关键字、操作符</p>\n<p>区别2：作用</p>\n<p>malloc/free只是简单的进行内存的申请和释放；new/delete除了进行内存申请和释放，还会调用对象的构造函数和析构函数进行空间的初始化和清理</p>\n<p>区别3：参数与返回值</p>\n<p>malloc/free需要手动计算申请内存的空间大小，而且返回值是void*，需要自己转换成所需要的类型</p>\n<p>new/delete可以自己计算类型的大小，返回为对应的类型指针</p>\n<p>区别4：内存占用</p>\n<p>malloc/free占用自由存储区，new/delete占用堆存储区</p>\n<p>如果一个类的析构函数是虚函数，那么一般是用来干嘛的？</p>\n<p>基类</p>\n<p>说一下C++中const的几种用法？</p>\n<p>const在谁后面谁就不可变。const在最前面就往后挪一个判断</p>\n<p>const常量与define宏定义的区别？</p>\n<p>const本质是变量，但是不可修改</p>\n<p>define本质就是字符串替换</p>\n<p>map的底层数据结构是什么？</p>\n<p>红黑树和平衡二叉树</p>\n<p>红黑树和平衡二叉树的区别？</p>\n<p>红黑树不追求完全平衡，有些时候性能更好</p>\n<p>哈希表的实现方法？如何解决哈希冲突？</p>\n<p>用C++做的后台多还是客户端多？</p>\n<p>说一下TCP和UDP的区别？</p>\n<p>1.基于连接与无连接；</p>\n<p>2.对系统资源的要求（TCP较多，UDP少）；</p>\n<p>3.UDP程序结构较简单；</p>\n<p>4.流模式与数据报模式</p>\n<p>5.TCP保证数据正确性，UDP可能丢包，TCP保证数据顺序，UDP不保证。</p>\n<p>TCP为什么是三次握手而四次挥手？</p>\n<p>三次握手保障在被链接方</p>\n<p>HTTPS加密机制？</p>\n<p>证书-&gt;key</p>\n<p>什么叫死锁？死锁产生的条件？</p>\n<p>多个进程在运行过程中因争夺资源</p>\n<p>1 互斥条件</p>\n<p>2 请求保持</p>\n<p>3 不剥夺</p>\n<p>4 循环等待</p>\n<p>进程间通信有哪些方法？</p>\n<p>管道（有名无名）</p>\n<p>Socket套接字</p>\n<p>信号和信号量</p>\n<p>消息队列</p>\n<p>共享内存</p>\n<p>管道pipe：管道是一种半双工的通信方式，数据只能单向流动，而且只能在具有亲缘关系的进程间使用。进程的亲缘关系通常是指父子进程关系。</p>\n<p>命名管道FIFO：有名管道也是半双工的通信方式，但是它允许无亲缘关系进程间的通信。</p>\n<p>消息队列MessageQueue：消息队列是由消息的链表，存放在内核中并由消息队列标识符标识。消息队列克服了信号传递信息少、管道只能承载无格式字节流以及缓冲区大小受限等缺点。</p>\n<p>共享存储SharedMemory：共享内存就是映射一段能被其他进程所访问的内存，这段共享内存由一个进程创建，但多个进程都可以访问。共享内存是最快的 IPC 方式，它是针对其他进程间通信方式运行效率低而专门设计的。它往往与其他通信机制，如信号量，配合使用，来实现进程间的同步和通信。</p>\n<p>信号量Semaphore：信号量是一个计数器，可以用来控制多个进程对共享资源的访问。它常作为一种锁机制，防止某进程正在访问共享资源时，其他进程也访问该资源。因此，主要作为进程间以及同一进程内不同线程之间的同步手段。</p>\n<p>套接字Socket：套解口也是一种进程间通信机制，与其他通信机制不同的是，它可用于不同及其间的进程通信。</p>\n<p>信号 ( sinal ) ： 信号是一种比较复杂的通信方式，用于通知接收进程某个事件已经发生。</p>\n<p>socket创建出来后，默认是什么模式？</p>\n<p>阻塞模式</p>\n<p>用户态和内核态的区别？</p>\n<p>内核态与用户态是操作系统的两种运行级别，当程序运行在3级特权级上时，就可以称之为运行在用户态。因为这是最低特权级，是普通的用户进程运行的特权级，大部分用户直接面对的程序都是运行在用户态；</p>\n<p>当程序运行在0级特权级上时，就可以称之为运行在内核态。</p>\n<p>运行在用户态下的程序不能直接访问操作系统内核数据结构和程序。当我们在系统中执行一个程序时，大部分时间是运行在用户态下的，在其需要操作系统帮助完成某些它没有权力和能力完成的工作时就会切换到内核态（比如操作硬件）。</p>\n<p>这两种状态的主要差别是</p>\n<p>处于用户态执行时，进程所能访问的内存空间和对象受到限制，其所处于占有的处理器是可被抢占的</p>\n<p>处于内核态执行时，则能访问所有的内存空间和对象，且所占有的处理器是不允许被抢占的。</p>\n<p>算法题–寻找一个无序数组的中位数</p>\n<p>快排</p>\n<p>最小堆</p>\n<p>算法题–在二叉树中寻找任意两个结点的最近公共结点</p>\n<p>深度优先</p>\n<p>设计一个LRU的缓存？</p>\n<p>LRU最近最久未使用</p>\n<p>1 数组+时间戳</p>\n<p>2 链表+hashmap+更新头部舍弃尾部</p>\n<p>讲一下云台项目的运行机制？</p>\n<hr>\n<h3 id=\"二面\"><a href=\"#二面\" class=\"headerlink\" title=\"二面\"></a>二面</h3><p>毕业后工作的地方倾向于哪里？</p>\n<p>说一下哈希表？</p>\n<p>数组，散列函数</p>\n<p>如果有哈希冲突的话如何处理？</p>\n<p>1 开放定址法:按照一定规则向其它地址探测,直到遇到空桶.比如线性探测,假如现在的索引是3,3有值就向4探测,如果还有就继续向下,还比如平方探测.就是1 2 3 …的平方进行探测.</p>\n<p>2:再哈希法,设计多个哈希函数</p>\n<p>3:链地址法,HashMap就是这样操作的</p>\n<p>什么是平衡二叉树？当有节点发生变化的时候它会怎么样？</p>\n<p>高度相差小于2，做平衡</p>\n<p>map和set底层的数据结构？</p>\n<p>红黑树</p>\n<p>红黑树的查找效率是怎样的？解释一下为什么是这样？</p>\n<p>logn平均，最大2logn</p>\n<p>vector中erase()和remove()的区别？</p>\n<p>介绍一下TCP的滑动窗口？</p>\n<p>连续传输一组数据不用等待ack。快速重传。</p>\n<p>HTTPS为什么比较安全？</p>\n<p>证书，加密</p>\n<p>为什么可以用公钥加密，用私钥解密呢？背后的技术原理？</p>\n<p>RSA算法 大素数</p>\n<p>用户态和核心态？内核态一般可以做什么？有没有做过内核态的调试？</p>\n<p>进程管理</p>\n<p>有没有做过内存泄漏的追查？怎么做？</p>\n<p>Valgrind: Debugging and profiling Linux programs, aiming at programs written in C and C++</p>\n<p>ccmalloc: Linux和Solaris下对C和C++程序的简单的使用内存泄漏和malloc调试库</p>\n<p>LeakTracer: Linux、Solaris和HP-UX下跟踪和分析C++程序中的内存泄漏</p>\n<p>Electric Fence: Linux分发版中由Bruce Perens编写的malloc()调试库</p>\n<p>Leaky: Linux下检测内存泄漏的程序</p>\n<p>Dmalloc: Debug Malloc Library</p>\n<p>MEMWATCH: 由Johan Lindh编写，是一个开放源代码C语言内存错误检测工具，主要是通过gcc的precessor来进行</p>\n<p>KCachegrind: A visualization tool for the profiling data generated by Cachegrind and Calltree</p>\n<p>TCP断开连接是几次挥手？为什么？</p>\n<p>4次</p>\n<p>有什么问题吗？</p>\n<p>可以实习多久？</p>\n<hr>\n<h2 id=\"腾讯CSIG\"><a href=\"#腾讯CSIG\" class=\"headerlink\" title=\"腾讯CSIG\"></a>腾讯CSIG</h2><h3 id=\"一面-2\"><a href=\"#一面-2\" class=\"headerlink\" title=\"一面\"></a>一面</h3><p>1.自我介绍</p>\n<p>2.项目优化</p>\n<p>3.线程池和多线程编程</p>\n<p>4.内存泄漏</p>\n<p>5.垃圾回收算法</p>\n<p>6.http和https，加密过程</p>\n<p>7.TCP三次握手和四次挥手</p>\n<p>8.TCP的time_wait</p>\n<p>9.生产者消费者，使用什么数据结构存储资源</p>\n<p>10.翻转链表（没写出来，我想找个班上了）</p>\n<p>11.对于转客户端有什么学习的计划</p>\n<p>12.实习时间和时长</p>\n<hr>\n<h2 id=\"腾讯PCG客户端\"><a href=\"#腾讯PCG客户端\" class=\"headerlink\" title=\"腾讯PCG客户端\"></a>腾讯PCG客户端</h2><p>作者：牛客815852018号</p>\n<p><a class=\"link\"   href=\"https://www.nowcoder.com/discuss/630418?channel=-1&amp;source_id=community_index_nctrack\" >https://www.nowcoder.com/discuss/630418?channel=-1&amp;source_id=community_index_nctrack<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>来源：牛客网</p>\n<p>一面视频面试（1h30min）：</p>\n<p>挑一个简历里的项目介绍</p>\n<p>问了问开发环境</p>\n<p>STL Array List区别</p>\n<p>new, malloc区别</p>\n<p>汇编语言/C++内存结构 函数A call 函数B过程</p>\n<p>虚函数</p>\n<p>虚函数怎么运作的（虚函数表）</p>\n<p>空类包含什么函数</p>\n<p>对象的copy函数怎么运作的</p>\n<p>线程进程区别</p>\n<p>线程进程交流</p>\n<p>TCP/UDP 区别</p>\n<p>C++11特性</p>\n<p>智能指针介绍</p>\n<p>各种树的特点，底层实现</p>\n<p>死锁/例子</p>\n<p>快排思想及时间复杂度</p>\n<p>算法：</p>\n<p>一个无序数组找中位数</p>\n<p>写代码：</p>\n<p>Leetcode 415</p>\n<p>拓展问了一下这道题如果换成减法是怎么实现的</p>\n<p>大部分概念题都答出来了，写代码的题有两个笔误一直没发现是提醒后修改的。面完官网就变复试</p>\n<hr>\n<h2 id=\"二面-1\"><a href=\"#二面-1\" class=\"headerlink\" title=\"二面\"></a>二面</h2><p>电话面试（40min）：</p>\n<p>自我介绍</p>\n<p>项目简介</p>\n<p>进程之间如何交流，各有什么优缺点</p>\n<p>介绍一下各种搜索树</p>\n<p>平衡二叉树旋转</p>\n<p>数据库引索用的是什么树</p>\n<p>数据库索引怎么实现，高效么</p>\n<p>md5算法介绍，怎么实现</p>\n<p>strcpy安全隐患，有什么好的替代</p>\n<p>本地客户端使用html源码安全隐患</p>\n<p>HTTPS加密具体过程</p>\n<p>TCP/UDP 发出一个大包有什么区别</p>\n<p>哈希冲突 （要求说出三种方案）</p>\n<p>开放定址</p>\n<p>再哈希法</p>\n<p>哈希链表</p>\n<p>算法：</p>\n<p>一个无序数组找中位数 （没错就是和一面一样的问题，但我用了一面的回答面试官直接要求让我想一个复杂度更低的orz）</p>\n<h2 id=\"腾讯pcg\"><a href=\"#腾讯pcg\" class=\"headerlink\" title=\"腾讯pcg\"></a>腾讯pcg</h2><p>作者：徐201903212006771</p>\n<p>链接：<a class=\"link\"   href=\"https://www.nowcoder.com/discuss/436432?channel=-1&amp;source_id=discuss_terminal_discuss_sim_nctrack\" >https://www.nowcoder.com/discuss/436432?channel=-1&amp;source_id=discuss_terminal_discuss_sim_nctrack<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>来源：牛客网</p>\n<h3 id=\"一面-3\"><a href=\"#一面-3\" class=\"headerlink\" title=\"一面\"></a>一面</h3><p>时间：2020.05.22     面试时长：1h</p>\n<p>1.自我介绍</p>\n<p>2.笔试题1：删除无序链表中的重复结点（能否优化）</p>\n<p>例：输入3 -&gt; 2 -&gt; 4 -&gt; 3 -&gt; 5 输出3 -&gt; 2 -&gt; 4 -&gt; 5</p>\n<p>解释：3结点重复，将第二个’3’结点删除（这边的重复指的是结点的值重复）</p>\n<p>3.笔试题2：先说一下二叉树的有哪些遍历方法。写一个二叉树前序遍历的非递归形式。</p>\n<p>4.讲一下Java的内存。</p>\n<p>5.创建一个字符串对象，这个对象分配在哪里？</p>\n<p>6.String str = “123” + “456”;会创建几个对象。</p>\n<p>7.问了操作系统的问题，没学过，所以也忘了问了什么。</p>\n<p>8.数据存储有学过吗？数据库和文件保存有什么区别？</p>\n<p>9.Activity有哪些启动模式？</p>\n<p>显式启动</p>\n<p>隐式启动</p>\n<p>直接通过包名启动apk</p>\n<p>10.有什么要问的？</p>\n<hr>\n<h3 id=\"二面-2\"><a href=\"#二面-2\" class=\"headerlink\" title=\"二面\"></a>二面</h3><p>时间：2020.05.23     面试时长：1h</p>\n<p>1.上一轮面试做了哪2到面试题？</p>\n<p>2.会哪些编程语言？</p>\n<p>3.想做哪个方向？为什么？Android</p>\n<p>4.对Android比较感兴趣，都学了些什么？我答了活动的启动模式、Handler。</p>\n<p>5.ListView源代码有看过吗？没看过。</p>\n<p>6.想一下ListView应该是怎么实现的？链表？</p>\n<p>\\7. ListView滑动页面如何实现页面的复用？队列？后来经过面试官的引导，有了思路。一开始往下滑，为了不影响用户体验，下面的数据，需要先预加载，这样往下滑的时候，就可以快速地显示内容。如果往下滑了之后，又想要往上滑，采用移出页面的内容，就把相应的数据销毁掉，等需要再显示的时候重新加载，比较费时；可以在一开始往下滑的时候，移出页面的内容，将相应的UI数据（不是实际的内容数据，这个一直在存储空间中）压到一个栈里面，等要往回滑的时候，再出栈，恢复数据，这样就比较快。因此在做滑动页面的操作的时候，需要上下预留出一定量的项的数据，超过这个量，再把这些数据释放掉，具体需要留多少，一个是跟页面能显示多少有关，可以通过大量测试，看看多少比较合适。还跟用户的使用习惯有关，动态调节，可以引入机器学习的方法。</p>\n<p>8.给你2个线程，如何产生死锁？为什么会产生死锁？</p>\n<p>9.外存有一定量的数据，需要读取到内存中处理，但是内存的大小是不知道的，要求如何能够读取尽量少的次数，才能处理完全部的数据？</p>\n<p>核心是试探内存的大小，假如要处理100M、数据</p>\n<p>思路一：先用一个较小的数，比如1M的数据，看看内存能不能存得下，可以的话，2M，可以，4M，……如此指数增长地尝试，希望能找出一个比较大地和内存容量比较接近的值。假如得到了内存的大概大小，然后每次就以这个数来读取外存的数据，读取次数应该会比较少。</p>\n<p>思路二：和思路一类似，不同的是一开始选的数偏大，比如5M，然后每次按固定值增长，即线性增长。后面的操作就类似了。</p>\n<p>思路三：从大往小试探，先看50M能不能存得下，不行25M，可以37M，每次处理37M，3次就够了。</p>\n<p>假如内存分成了50M、25M、10M、5M，如何找到第65M内存？</p>\n<p>\\10.  实习想要达到什么样的期望？基础能力得提升，想能独立做出几个App。</p>\n<p>\\11.  如何达到你得期望？基础要扎实，看安卓源代码，在实际场景中做练习。想要在多少时间达到这样一个目标？实习完，能独立开发几个应用；正式入职，深入了解安卓，新发布的技术也要及时了，工作个1-2年，看看能不能当个小组leader。</p>\n<p>在这方面花更多精力，学新知识，不断解决问题、总结，遇到问题向同事请教，成长更快。</p>\n<p>\\12.  有看过Github得源码吗？</p>\n<p>\\13.  提问环节：问了面试官是做什么方向的？做了很多方向。</p>\n<p>\\14.  还问了Kotlin在公司的普及度，现在是否有必要学习？现在主要还是以Java为主，少数也在做，毕竟Java沉淀了这么多年。所以还是Java方面先学好。</p>\n<p>\\15.  自己选方向，还是分配方向？比较想做安卓。都做了哪些努力？看书、看博客。</p>\n<p>\\16.  周围有同学投腾讯的吗？有做客户端、前端的吗？</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cl2isrz0n00019gv88meohxpp","category_id":"cl2isrz0v00049gv8gihjfn4t","_id":"cl2isrz15000e9gv83ici5ksp"},{"post_id":"cl2isrz13000c9gv8ecgjarj1","category_id":"cl2isrz1200099gv873be05b8","_id":"cl2isrz19000i9gv81bbfgehx"},{"post_id":"cl2isrz0s00039gv8453k42qn","category_id":"cl2isrz1200099gv873be05b8","_id":"cl2isrz1b000m9gv8aio9eku3"},{"post_id":"cl2isrz15000d9gv82iqp9p5f","category_id":"cl2isrz0v00049gv8gihjfn4t","_id":"cl2isrz1b000o9gv83otra4tu"},{"post_id":"cl2isrz18000h9gv85w1tg34g","category_id":"cl2isrz1200099gv873be05b8","_id":"cl2isrz1c000s9gv88nz95kqg"},{"post_id":"cl2isrz0y00069gv8g4z6e33y","category_id":"cl2isrz1200099gv873be05b8","_id":"cl2isrz1c000u9gv85hhp2pji"},{"post_id":"cl2isrz1000079gv81rt0cma2","category_id":"cl2isrz1200099gv873be05b8","_id":"cl2isrz1d000w9gv8eg8y8ze0"},{"post_id":"cl2isrz1100089gv8csoe9n8d","category_id":"cl2isrz1200099gv873be05b8","_id":"cl2isrz1d000y9gv8b31k9fas"},{"post_id":"cl2isrz1o001e9gv84c9jdaq1","category_id":"cl2isrz1q001g9gv84w1kdgck","_id":"cl2isrz1s001l9gv8fw4idnng"},{"post_id":"cl2isrz1p001f9gv80e92box2","category_id":"cl2isrz1r001i9gv832oq6d6z","_id":"cl2isrz1s001n9gv8d6oq1218"}],"PostTag":[{"post_id":"cl2isrz0n00019gv88meohxpp","tag_id":"cl2isrz0x00059gv8cyzrc3x0","_id":"cl2isrz13000b9gv8gqdv09yd"},{"post_id":"cl2isrz18000h9gv85w1tg34g","tag_id":"cl2isrz12000a9gv895lm4j0q","_id":"cl2isrz1b000l9gv8b7myeo9f"},{"post_id":"cl2isrz18000h9gv85w1tg34g","tag_id":"cl2isrz16000g9gv84vn52wyd","_id":"cl2isrz1b000n9gv8b59o17u5"},{"post_id":"cl2isrz0s00039gv8453k42qn","tag_id":"cl2isrz12000a9gv895lm4j0q","_id":"cl2isrz1c000r9gv83vx1933m"},{"post_id":"cl2isrz0s00039gv8453k42qn","tag_id":"cl2isrz16000g9gv84vn52wyd","_id":"cl2isrz1c000t9gv86ilye6v5"},{"post_id":"cl2isrz0y00069gv8g4z6e33y","tag_id":"cl2isrz12000a9gv895lm4j0q","_id":"cl2isrz1d000x9gv81zx85ksn"},{"post_id":"cl2isrz0y00069gv8g4z6e33y","tag_id":"cl2isrz16000g9gv84vn52wyd","_id":"cl2isrz1d000z9gv81uytchvk"},{"post_id":"cl2isrz1000079gv81rt0cma2","tag_id":"cl2isrz12000a9gv895lm4j0q","_id":"cl2isrz1e00129gv8hi7t1l5z"},{"post_id":"cl2isrz1000079gv81rt0cma2","tag_id":"cl2isrz16000g9gv84vn52wyd","_id":"cl2isrz1e00139gv84vzlgc0z"},{"post_id":"cl2isrz1100089gv8csoe9n8d","tag_id":"cl2isrz12000a9gv895lm4j0q","_id":"cl2isrz1g00169gv8dej121bb"},{"post_id":"cl2isrz1100089gv8csoe9n8d","tag_id":"cl2isrz16000g9gv84vn52wyd","_id":"cl2isrz1g00179gv88nzof84r"},{"post_id":"cl2isrz13000c9gv8ecgjarj1","tag_id":"cl2isrz12000a9gv895lm4j0q","_id":"cl2isrz1h00199gv8c22vcmo5"},{"post_id":"cl2isrz13000c9gv8ecgjarj1","tag_id":"cl2isrz16000g9gv84vn52wyd","_id":"cl2isrz1h001a9gv86qw1e894"},{"post_id":"cl2isrz15000d9gv82iqp9p5f","tag_id":"cl2isrz1g00189gv8gwxyahyd","_id":"cl2isrz1h001c9gv8ghhsay9n"},{"post_id":"cl2isrz15000d9gv82iqp9p5f","tag_id":"cl2isrz1h001b9gv8afsi3nvn","_id":"cl2isrz1h001d9gv8di6l02b2"},{"post_id":"cl2isrz1o001e9gv84c9jdaq1","tag_id":"cl2isrz1r001h9gv86yx41hm5","_id":"cl2isrz1s001k9gv84qg8c2zq"},{"post_id":"cl2isrz1p001f9gv80e92box2","tag_id":"cl2isrz1r001j9gv8awwg1sh1","_id":"cl2isrz1t001p9gv85d97cvn5"},{"post_id":"cl2isrz1p001f9gv80e92box2","tag_id":"cl2isrz1s001m9gv85sw7evn5","_id":"cl2isrz1t001q9gv86q405uhy"},{"post_id":"cl2isrz1p001f9gv80e92box2","tag_id":"cl2isrz1s001o9gv84m8i9t50","_id":"cl2isrz1t001r9gv86rhkf58s"}],"Tag":[{"name":"markdown","_id":"cl2isrz0x00059gv8cyzrc3x0"},{"name":"电影","_id":"cl2isrz12000a9gv895lm4j0q"},{"name":"施工中","_id":"cl2isrz16000g9gv84vn52wyd"},{"name":"hexo","_id":"cl2isrz1g00189gv8gwxyahyd"},{"name":"博客","_id":"cl2isrz1h001b9gv8afsi3nvn"},{"name":"疫情中的2022","_id":"cl2isrz1r001h9gv86yx41hm5"},{"name":"面试","_id":"cl2isrz1r001j9gv8awwg1sh1"},{"name":"客户端","_id":"cl2isrz1s001m9gv85sw7evn5"},{"name":"开发","_id":"cl2isrz1s001o9gv84m8i9t50"}]}}